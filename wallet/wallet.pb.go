// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: delivery/grpc/wallet/wallet.proto

package wallet

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogType int32

const (
	LogType_withdraw_request LogType = 0
	LogType_withdraw_success LogType = 1
	LogType_withdraw_failed  LogType = 2
	LogType_refund           LogType = 3
	LogType_dp               LogType = 4
	LogType_full_payment     LogType = 5
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "withdraw_request",
		1: "withdraw_success",
		2: "withdraw_failed",
		3: "refund",
		4: "dp",
		5: "full_payment",
	}
	LogType_value = map[string]int32{
		"withdraw_request": 0,
		"withdraw_success": 1,
		"withdraw_failed":  2,
		"refund":           3,
		"dp":               4,
		"full_payment":     5,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_delivery_grpc_wallet_wallet_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_delivery_grpc_wallet_wallet_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

type TransactionType int32

const (
	TransactionType_money_in  TransactionType = 0
	TransactionType_money_out TransactionType = 1
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "money_in",
		1: "money_out",
	}
	TransactionType_value = map[string]int32{
		"money_in":  0,
		"money_out": 1,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_delivery_grpc_wallet_wallet_proto_enumTypes[1].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_delivery_grpc_wallet_wallet_proto_enumTypes[1]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

type TransactionStatus int32

const (
	TransactionStatus_success TransactionStatus = 0
	TransactionStatus_failed  TransactionStatus = 1
	TransactionStatus_pending TransactionStatus = 2
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "success",
		1: "failed",
		2: "pending",
	}
	TransactionStatus_value = map[string]int32{
		"success": 0,
		"failed":  1,
		"pending": 2,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_delivery_grpc_wallet_wallet_proto_enumTypes[2].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_delivery_grpc_wallet_wallet_proto_enumTypes[2]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

type ReqWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BalanceUid        string `protobuf:"bytes,1,opt,name=balance_uid,json=balanceUid,proto3" json:"balance_uid,omitempty"` // hold balanceid
	TourId            string `protobuf:"bytes,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	ScheduleId        string `protobuf:"bytes,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Amount            int32  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BankCode          string `protobuf:"bytes,5,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`
	AccountHolderName string `protobuf:"bytes,6,opt,name=account_holder_name,json=accountHolderName,proto3" json:"account_holder_name,omitempty"`
	AccountNumber     string `protobuf:"bytes,7,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Description       string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReqWithdraw) Reset() {
	*x = ReqWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWithdraw) ProtoMessage() {}

func (x *ReqWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWithdraw.ProtoReflect.Descriptor instead.
func (*ReqWithdraw) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *ReqWithdraw) GetBalanceUid() string {
	if x != nil {
		return x.BalanceUid
	}
	return ""
}

func (x *ReqWithdraw) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *ReqWithdraw) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ReqWithdraw) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqWithdraw) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *ReqWithdraw) GetAccountHolderName() string {
	if x != nil {
		return x.AccountHolderName
	}
	return ""
}

func (x *ReqWithdraw) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ReqWithdraw) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BussinessName string `protobuf:"bytes,3,opt,name=bussiness_name,json=bussinessName,proto3" json:"bussiness_name,omitempty"`
	Email         string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Contact       string `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *Host) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetBussinessName() string {
	if x != nil {
		return x.BussinessName
	}
	return ""
}

func (x *Host) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Host) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

type DeletedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *DeletedUser) Reset() {
	*x = DeletedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedUser) ProtoMessage() {}

func (x *DeletedUser) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedUser.ProtoReflect.Descriptor instead.
func (*DeletedUser) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *DeletedUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletedUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeletedUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type HostWithdrawCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                  string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ExternalId              string               `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Amount                  int32                `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BankCode                string               `protobuf:"bytes,5,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`
	AccountHolderName       string               `protobuf:"bytes,6,opt,name=account_holder_name,json=accountHolderName,proto3" json:"account_holder_name,omitempty"`
	DisbursementDescription string               `protobuf:"bytes,7,opt,name=disbursement_description,json=disbursementDescription,proto3" json:"disbursement_description,omitempty"`
	FailureCode             string               `protobuf:"bytes,8,opt,name=failure_code,json=failureCode,proto3" json:"failure_code,omitempty"`
	IsInstant               bool                 `protobuf:"varint,9,opt,name=is_instant,json=isInstant,proto3" json:"is_instant,omitempty"`
	Status                  string               `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt               *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt               *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EmailTo                 []string             `protobuf:"bytes,13,rep,name=email_to,json=emailTo,proto3" json:"email_to,omitempty"`
	EmailCc                 []string             `protobuf:"bytes,14,rep,name=email_cc,json=emailCc,proto3" json:"email_cc,omitempty"`
	EmailBcc                []string             `protobuf:"bytes,15,rep,name=email_bcc,json=emailBcc,proto3" json:"email_bcc,omitempty"`
}

func (x *HostWithdrawCallback) Reset() {
	*x = HostWithdrawCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostWithdrawCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostWithdrawCallback) ProtoMessage() {}

func (x *HostWithdrawCallback) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostWithdrawCallback.ProtoReflect.Descriptor instead.
func (*HostWithdrawCallback) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *HostWithdrawCallback) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostWithdrawCallback) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HostWithdrawCallback) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *HostWithdrawCallback) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *HostWithdrawCallback) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *HostWithdrawCallback) GetAccountHolderName() string {
	if x != nil {
		return x.AccountHolderName
	}
	return ""
}

func (x *HostWithdrawCallback) GetDisbursementDescription() string {
	if x != nil {
		return x.DisbursementDescription
	}
	return ""
}

func (x *HostWithdrawCallback) GetFailureCode() string {
	if x != nil {
		return x.FailureCode
	}
	return ""
}

func (x *HostWithdrawCallback) GetIsInstant() bool {
	if x != nil {
		return x.IsInstant
	}
	return false
}

func (x *HostWithdrawCallback) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HostWithdrawCallback) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *HostWithdrawCallback) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *HostWithdrawCallback) GetEmailTo() []string {
	if x != nil {
		return x.EmailTo
	}
	return nil
}

func (x *HostWithdrawCallback) GetEmailCc() []string {
	if x != nil {
		return x.EmailCc
	}
	return nil
}

func (x *HostWithdrawCallback) GetEmailBcc() []string {
	if x != nil {
		return x.EmailBcc
	}
	return nil
}

type HostWithdrawCallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HostWithdrawCallbackResponse) Reset() {
	*x = HostWithdrawCallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostWithdrawCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostWithdrawCallbackResponse) ProtoMessage() {}

func (x *HostWithdrawCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostWithdrawCallbackResponse.ProtoReflect.Descriptor instead.
func (*HostWithdrawCallbackResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *HostWithdrawCallbackResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserUid   string               `protobuf:"bytes,2,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	Amount    int32                `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *Balance) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Balance) GetUserUid() string {
	if x != nil {
		return x.UserUid
	}
	return ""
}

func (x *Balance) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Balance) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Balances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances []*Balance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *Balances) Reset() {
	*x = Balances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balances) ProtoMessage() {}

func (x *Balances) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balances.ProtoReflect.Descriptor instead.
func (*Balances) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *Balances) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Balance `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceResponse) GetData() *Balance {
	if x != nil {
		return x.Data
	}
	return nil
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *BalanceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Tour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourTitle     string               `protobuf:"bytes,1,opt,name=tour_title,json=tourTitle,proto3" json:"tour_title,omitempty"`
	TourStartDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=tour_start_date,json=tourStartDate,proto3" json:"tour_start_date,omitempty"`
	TourEndDate   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=tour_end_date,json=tourEndDate,proto3" json:"tour_end_date,omitempty"`
	ScheduleId    string               `protobuf:"bytes,4,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	TourId        string               `protobuf:"bytes,5,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
}

func (x *Tour) Reset() {
	*x = Tour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tour) ProtoMessage() {}

func (x *Tour) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tour.ProtoReflect.Descriptor instead.
func (*Tour) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *Tour) GetTourTitle() string {
	if x != nil {
		return x.TourTitle
	}
	return ""
}

func (x *Tour) GetTourStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.TourStartDate
	}
	return nil
}

func (x *Tour) GetTourEndDate() *timestamp.Timestamp {
	if x != nil {
		return x.TourEndDate
	}
	return nil
}

func (x *Tour) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *Tour) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

type LogBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BalanceUid      string               `protobuf:"bytes,2,opt,name=balance_uid,json=balanceUid,proto3" json:"balance_uid,omitempty"`
	UserUid         string               `protobuf:"bytes,3,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	Tour            *Tour                `protobuf:"bytes,4,opt,name=tour,proto3" json:"tour,omitempty"`
	Amount          int32                `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type            LogType              `protobuf:"varint,6,opt,name=type,proto3,enum=wallet.LogType" json:"type,omitempty"`
	Message         string               `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	TransactionId   string               `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionType TransactionType      `protobuf:"varint,9,opt,name=transaction_type,json=transactionType,proto3,enum=wallet.TransactionType" json:"transaction_type,omitempty"`
	Status          TransactionStatus    `protobuf:"varint,10,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	UpdatedAt       *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LogBalance) Reset() {
	*x = LogBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBalance) ProtoMessage() {}

func (x *LogBalance) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBalance.ProtoReflect.Descriptor instead.
func (*LogBalance) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *LogBalance) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LogBalance) GetBalanceUid() string {
	if x != nil {
		return x.BalanceUid
	}
	return ""
}

func (x *LogBalance) GetUserUid() string {
	if x != nil {
		return x.UserUid
	}
	return ""
}

func (x *LogBalance) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

func (x *LogBalance) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LogBalance) GetType() LogType {
	if x != nil {
		return x.Type
	}
	return LogType_withdraw_request
}

func (x *LogBalance) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogBalance) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *LogBalance) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_money_in
}

func (x *LogBalance) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_success
}

func (x *LogBalance) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LogBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BalanceUid      string               `protobuf:"bytes,2,opt,name=balance_uid,json=balanceUid,proto3" json:"balance_uid,omitempty"`
	UserUid         string               `protobuf:"bytes,3,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	Tour            *Tour                `protobuf:"bytes,4,opt,name=tour,proto3" json:"tour,omitempty"`
	Amount          int32                `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type            string               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Message         string               `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	TransactionId   string               `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionType string               `protobuf:"bytes,9,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Status          string               `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt       *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LogBalanceResponse) Reset() {
	*x = LogBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBalanceResponse) ProtoMessage() {}

func (x *LogBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBalanceResponse.ProtoReflect.Descriptor instead.
func (*LogBalanceResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *LogBalanceResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LogBalanceResponse) GetBalanceUid() string {
	if x != nil {
		return x.BalanceUid
	}
	return ""
}

func (x *LogBalanceResponse) GetUserUid() string {
	if x != nil {
		return x.UserUid
	}
	return ""
}

func (x *LogBalanceResponse) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

func (x *LogBalanceResponse) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LogBalanceResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogBalanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogBalanceResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *LogBalanceResponse) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *LogBalanceResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LogBalanceResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SingleLogBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *LogBalanceResponse `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SingleLogBalanceResponse) Reset() {
	*x = SingleLogBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleLogBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleLogBalanceResponse) ProtoMessage() {}

func (x *SingleLogBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleLogBalanceResponse.ProtoReflect.Descriptor instead.
func (*SingleLogBalanceResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *SingleLogBalanceResponse) GetData() *LogBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogsBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*LogBalanceResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LogsBalanceResponse) Reset() {
	*x = LogsBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsBalanceResponse) ProtoMessage() {}

func (x *LogsBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsBalanceResponse.ProtoReflect.Descriptor instead.
func (*LogsBalanceResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *LogsBalanceResponse) GetData() []*LogBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransactionInHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Type        LogType              `protobuf:"varint,2,opt,name=type,proto3,enum=wallet.LogType" json:"type,omitempty"`
	Amount      string               `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status      TransactionStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	Tour        *Tour                `protobuf:"bytes,5,opt,name=tour,proto3" json:"tour,omitempty"`
	Host        *Host                `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	DeletedUser *DeletedUser         `protobuf:"bytes,7,opt,name=deleted_user,json=deletedUser,proto3" json:"deleted_user,omitempty"`
}

func (x *TransactionInHistoryResponse) Reset() {
	*x = TransactionInHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInHistoryResponse) ProtoMessage() {}

func (x *TransactionInHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInHistoryResponse.ProtoReflect.Descriptor instead.
func (*TransactionInHistoryResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionInHistoryResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TransactionInHistoryResponse) GetType() LogType {
	if x != nil {
		return x.Type
	}
	return LogType_withdraw_request
}

func (x *TransactionInHistoryResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionInHistoryResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_success
}

func (x *TransactionInHistoryResponse) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

func (x *TransactionInHistoryResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *TransactionInHistoryResponse) GetDeletedUser() *DeletedUser {
	if x != nil {
		return x.DeletedUser
	}
	return nil
}

type LogBalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *LogBalancesRequest) Reset() {
	*x = LogBalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBalancesRequest) ProtoMessage() {}

func (x *LogBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBalancesRequest.ProtoReflect.Descriptor instead.
func (*LogBalancesRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *LogBalancesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogBalancesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LogBalancesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type LogHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Search string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Order  string `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *LogHistoryRequest) Reset() {
	*x = LogHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogHistoryRequest) ProtoMessage() {}

func (x *LogHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogHistoryRequest.ProtoReflect.Descriptor instead.
func (*LogHistoryRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *LogHistoryRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *LogHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LogHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LogHistoryRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *LogHistoryRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type LogBalancesRequestWithSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TourId     string `protobuf:"bytes,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	ScheduleId string `protobuf:"bytes,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
}

func (x *LogBalancesRequestWithSchedule) Reset() {
	*x = LogBalancesRequestWithSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBalancesRequestWithSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBalancesRequestWithSchedule) ProtoMessage() {}

func (x *LogBalancesRequestWithSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_wallet_wallet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBalancesRequestWithSchedule.ProtoReflect.Descriptor instead.
func (*LogBalancesRequestWithSchedule) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_wallet_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *LogBalancesRequestWithSchedule) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogBalancesRequestWithSchedule) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *LogBalancesRequestWithSchedule) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

var File_delivery_grpc_wallet_wallet_proto protoreflect.FileDescriptor

var file_delivery_grpc_wallet_wallet_proto_rawDesc = []byte{
	0x0a, 0x21, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0xa3, 0x04, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x6f, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x63, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x62, 0x63, 0x63, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x63, 0x63, 0x22, 0x32, 0x0a, 0x1c, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x37, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22,
	0x36, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x04,
	0x54, 0x6f, 0x75, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x22, 0xac, 0x03, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xef, 0x02, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45,
	0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x02, 0x0a, 0x1c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74,
	0x6f, 0x75, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x5b, 0x0a,
	0x12, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x4c,
	0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x73, 0x0a, 0x1e, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x2a, 0x70, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x06, 0x0a,
	0x02, 0x64, 0x70, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x2a, 0x2e, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x5f, 0x6f, 0x75, 0x74, 0x10, 0x01, 0x2a, 0x39, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x02, 0x32, 0xeb, 0x06, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x41, 0x64, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x17,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1a,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12,
	0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6c,
	0x6f, 0x67, 0x73, 0x2d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x12, 0x75, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x20,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x0f,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x13, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x3a, 0x01, 0x2a,
	0x12, 0x8d, 0x01, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x6f, 0x73,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_delivery_grpc_wallet_wallet_proto_rawDescOnce sync.Once
	file_delivery_grpc_wallet_wallet_proto_rawDescData = file_delivery_grpc_wallet_wallet_proto_rawDesc
)

func file_delivery_grpc_wallet_wallet_proto_rawDescGZIP() []byte {
	file_delivery_grpc_wallet_wallet_proto_rawDescOnce.Do(func() {
		file_delivery_grpc_wallet_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_delivery_grpc_wallet_wallet_proto_rawDescData)
	})
	return file_delivery_grpc_wallet_wallet_proto_rawDescData
}

var file_delivery_grpc_wallet_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_delivery_grpc_wallet_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_delivery_grpc_wallet_wallet_proto_goTypes = []interface{}{
	(LogType)(0),                           // 0: wallet.LogType
	(TransactionType)(0),                   // 1: wallet.TransactionType
	(TransactionStatus)(0),                 // 2: wallet.TransactionStatus
	(*ReqWithdraw)(nil),                    // 3: wallet.ReqWithdraw
	(*Host)(nil),                           // 4: wallet.Host
	(*DeletedUser)(nil),                    // 5: wallet.DeletedUser
	(*HostWithdrawCallback)(nil),           // 6: wallet.HostWithdrawCallback
	(*HostWithdrawCallbackResponse)(nil),   // 7: wallet.HostWithdrawCallbackResponse
	(*Balance)(nil),                        // 8: wallet.Balance
	(*Balances)(nil),                       // 9: wallet.Balances
	(*BalanceResponse)(nil),                // 10: wallet.BalanceResponse
	(*BalanceRequest)(nil),                 // 11: wallet.BalanceRequest
	(*Tour)(nil),                           // 12: wallet.Tour
	(*LogBalance)(nil),                     // 13: wallet.LogBalance
	(*LogBalanceResponse)(nil),             // 14: wallet.LogBalanceResponse
	(*SingleLogBalanceResponse)(nil),       // 15: wallet.SingleLogBalanceResponse
	(*LogsBalanceResponse)(nil),            // 16: wallet.LogsBalanceResponse
	(*TransactionInHistoryResponse)(nil),   // 17: wallet.TransactionInHistoryResponse
	(*LogBalancesRequest)(nil),             // 18: wallet.LogBalancesRequest
	(*LogHistoryRequest)(nil),              // 19: wallet.LogHistoryRequest
	(*LogBalancesRequestWithSchedule)(nil), // 20: wallet.LogBalancesRequestWithSchedule
	(*timestamp.Timestamp)(nil),            // 21: google.protobuf.Timestamp
}
var file_delivery_grpc_wallet_wallet_proto_depIdxs = []int32{
	21, // 0: wallet.HostWithdrawCallback.updated_at:type_name -> google.protobuf.Timestamp
	21, // 1: wallet.HostWithdrawCallback.created_at:type_name -> google.protobuf.Timestamp
	21, // 2: wallet.Balance.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 3: wallet.Balances.balances:type_name -> wallet.Balance
	8,  // 4: wallet.BalanceResponse.data:type_name -> wallet.Balance
	21, // 5: wallet.Tour.tour_start_date:type_name -> google.protobuf.Timestamp
	21, // 6: wallet.Tour.tour_end_date:type_name -> google.protobuf.Timestamp
	12, // 7: wallet.LogBalance.tour:type_name -> wallet.Tour
	0,  // 8: wallet.LogBalance.type:type_name -> wallet.LogType
	1,  // 9: wallet.LogBalance.transaction_type:type_name -> wallet.TransactionType
	2,  // 10: wallet.LogBalance.status:type_name -> wallet.TransactionStatus
	21, // 11: wallet.LogBalance.updated_at:type_name -> google.protobuf.Timestamp
	12, // 12: wallet.LogBalanceResponse.tour:type_name -> wallet.Tour
	21, // 13: wallet.LogBalanceResponse.updated_at:type_name -> google.protobuf.Timestamp
	14, // 14: wallet.SingleLogBalanceResponse.data:type_name -> wallet.LogBalanceResponse
	14, // 15: wallet.LogsBalanceResponse.data:type_name -> wallet.LogBalanceResponse
	21, // 16: wallet.TransactionInHistoryResponse.created_at:type_name -> google.protobuf.Timestamp
	0,  // 17: wallet.TransactionInHistoryResponse.type:type_name -> wallet.LogType
	2,  // 18: wallet.TransactionInHistoryResponse.status:type_name -> wallet.TransactionStatus
	12, // 19: wallet.TransactionInHistoryResponse.tour:type_name -> wallet.Tour
	4,  // 20: wallet.TransactionInHistoryResponse.host:type_name -> wallet.Host
	5,  // 21: wallet.TransactionInHistoryResponse.deleted_user:type_name -> wallet.DeletedUser
	13, // 22: wallet.WalletService.CreateOrAddBalance:input_type -> wallet.LogBalance
	11, // 23: wallet.WalletService.GetBalance:input_type -> wallet.BalanceRequest
	18, // 24: wallet.WalletService.GetLogBalances:input_type -> wallet.LogBalancesRequest
	19, // 25: wallet.WalletService.TransactionInHistory:input_type -> wallet.LogHistoryRequest
	20, // 26: wallet.WalletService.GetLogBalancesSchedule:input_type -> wallet.LogBalancesRequestWithSchedule
	3,  // 27: wallet.WalletService.WithdrawHostReq:input_type -> wallet.ReqWithdraw
	6,  // 28: wallet.WalletService.WithdrawHostCallback:input_type -> wallet.HostWithdrawCallback
	10, // 29: wallet.WalletService.CreateOrAddBalance:output_type -> wallet.BalanceResponse
	10, // 30: wallet.WalletService.GetBalance:output_type -> wallet.BalanceResponse
	16, // 31: wallet.WalletService.GetLogBalances:output_type -> wallet.LogsBalanceResponse
	17, // 32: wallet.WalletService.TransactionInHistory:output_type -> wallet.TransactionInHistoryResponse
	15, // 33: wallet.WalletService.GetLogBalancesSchedule:output_type -> wallet.SingleLogBalanceResponse
	15, // 34: wallet.WalletService.WithdrawHostReq:output_type -> wallet.SingleLogBalanceResponse
	7,  // 35: wallet.WalletService.WithdrawHostCallback:output_type -> wallet.HostWithdrawCallbackResponse
	29, // [29:36] is the sub-list for method output_type
	22, // [22:29] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_delivery_grpc_wallet_wallet_proto_init() }
func file_delivery_grpc_wallet_wallet_proto_init() {
	if File_delivery_grpc_wallet_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delivery_grpc_wallet_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostWithdrawCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostWithdrawCallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleLogBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_wallet_wallet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBalancesRequestWithSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delivery_grpc_wallet_wallet_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_delivery_grpc_wallet_wallet_proto_goTypes,
		DependencyIndexes: file_delivery_grpc_wallet_wallet_proto_depIdxs,
		EnumInfos:         file_delivery_grpc_wallet_wallet_proto_enumTypes,
		MessageInfos:      file_delivery_grpc_wallet_wallet_proto_msgTypes,
	}.Build()
	File_delivery_grpc_wallet_wallet_proto = out.File
	file_delivery_grpc_wallet_wallet_proto_rawDesc = nil
	file_delivery_grpc_wallet_wallet_proto_goTypes = nil
	file_delivery_grpc_wallet_wallet_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WalletServiceClient is the client API for WalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletServiceClient interface {
	CreateOrAddBalance(ctx context.Context, in *LogBalance, opts ...grpc.CallOption) (*BalanceResponse, error)
	GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error)
	GetLogBalances(ctx context.Context, in *LogBalancesRequest, opts ...grpc.CallOption) (*LogsBalanceResponse, error)
	TransactionInHistory(ctx context.Context, in *LogHistoryRequest, opts ...grpc.CallOption) (*TransactionInHistoryResponse, error)
	GetLogBalancesSchedule(ctx context.Context, in *LogBalancesRequestWithSchedule, opts ...grpc.CallOption) (*SingleLogBalanceResponse, error)
	WithdrawHostReq(ctx context.Context, in *ReqWithdraw, opts ...grpc.CallOption) (*SingleLogBalanceResponse, error)
	WithdrawHostCallback(ctx context.Context, in *HostWithdrawCallback, opts ...grpc.CallOption) (*HostWithdrawCallbackResponse, error)
}

type walletServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletServiceClient(cc grpc.ClientConnInterface) WalletServiceClient {
	return &walletServiceClient{cc}
}

func (c *walletServiceClient) CreateOrAddBalance(ctx context.Context, in *LogBalance, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/CreateOrAddBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetLogBalances(ctx context.Context, in *LogBalancesRequest, opts ...grpc.CallOption) (*LogsBalanceResponse, error) {
	out := new(LogsBalanceResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/GetLogBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) TransactionInHistory(ctx context.Context, in *LogHistoryRequest, opts ...grpc.CallOption) (*TransactionInHistoryResponse, error) {
	out := new(TransactionInHistoryResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/TransactionInHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetLogBalancesSchedule(ctx context.Context, in *LogBalancesRequestWithSchedule, opts ...grpc.CallOption) (*SingleLogBalanceResponse, error) {
	out := new(SingleLogBalanceResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/GetLogBalancesSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) WithdrawHostReq(ctx context.Context, in *ReqWithdraw, opts ...grpc.CallOption) (*SingleLogBalanceResponse, error) {
	out := new(SingleLogBalanceResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/WithdrawHostReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) WithdrawHostCallback(ctx context.Context, in *HostWithdrawCallback, opts ...grpc.CallOption) (*HostWithdrawCallbackResponse, error) {
	out := new(HostWithdrawCallbackResponse)
	err := c.cc.Invoke(ctx, "/wallet.WalletService/WithdrawHostCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServiceServer is the server API for WalletService service.
type WalletServiceServer interface {
	CreateOrAddBalance(context.Context, *LogBalance) (*BalanceResponse, error)
	GetBalance(context.Context, *BalanceRequest) (*BalanceResponse, error)
	GetLogBalances(context.Context, *LogBalancesRequest) (*LogsBalanceResponse, error)
	TransactionInHistory(context.Context, *LogHistoryRequest) (*TransactionInHistoryResponse, error)
	GetLogBalancesSchedule(context.Context, *LogBalancesRequestWithSchedule) (*SingleLogBalanceResponse, error)
	WithdrawHostReq(context.Context, *ReqWithdraw) (*SingleLogBalanceResponse, error)
	WithdrawHostCallback(context.Context, *HostWithdrawCallback) (*HostWithdrawCallbackResponse, error)
}

// UnimplementedWalletServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServiceServer struct {
}

func (*UnimplementedWalletServiceServer) CreateOrAddBalance(context.Context, *LogBalance) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrAddBalance not implemented")
}
func (*UnimplementedWalletServiceServer) GetBalance(context.Context, *BalanceRequest) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedWalletServiceServer) GetLogBalances(context.Context, *LogBalancesRequest) (*LogsBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLogBalances not implemented")
}
func (*UnimplementedWalletServiceServer) TransactionInHistory(context.Context, *LogHistoryRequest) (*TransactionInHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransactionInHistory not implemented")
}
func (*UnimplementedWalletServiceServer) GetLogBalancesSchedule(context.Context, *LogBalancesRequestWithSchedule) (*SingleLogBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLogBalancesSchedule not implemented")
}
func (*UnimplementedWalletServiceServer) WithdrawHostReq(context.Context, *ReqWithdraw) (*SingleLogBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawHostReq not implemented")
}
func (*UnimplementedWalletServiceServer) WithdrawHostCallback(context.Context, *HostWithdrawCallback) (*HostWithdrawCallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawHostCallback not implemented")
}

func RegisterWalletServiceServer(s *grpc.Server, srv WalletServiceServer) {
	s.RegisterService(&_WalletService_serviceDesc, srv)
}

func _WalletService_CreateOrAddBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).CreateOrAddBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/CreateOrAddBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).CreateOrAddBalance(ctx, req.(*LogBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetBalance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetLogBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogBalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetLogBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/GetLogBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetLogBalances(ctx, req.(*LogBalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_TransactionInHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).TransactionInHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/TransactionInHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).TransactionInHistory(ctx, req.(*LogHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetLogBalancesSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogBalancesRequestWithSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetLogBalancesSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/GetLogBalancesSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetLogBalancesSchedule(ctx, req.(*LogBalancesRequestWithSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_WithdrawHostReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).WithdrawHostReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/WithdrawHostReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).WithdrawHostReq(ctx, req.(*ReqWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_WithdrawHostCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostWithdrawCallback)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).WithdrawHostCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.WalletService/WithdrawHostCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).WithdrawHostCallback(ctx, req.(*HostWithdrawCallback))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wallet.WalletService",
	HandlerType: (*WalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrAddBalance",
			Handler:    _WalletService_CreateOrAddBalance_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _WalletService_GetBalance_Handler,
		},
		{
			MethodName: "GetLogBalances",
			Handler:    _WalletService_GetLogBalances_Handler,
		},
		{
			MethodName: "TransactionInHistory",
			Handler:    _WalletService_TransactionInHistory_Handler,
		},
		{
			MethodName: "GetLogBalancesSchedule",
			Handler:    _WalletService_GetLogBalancesSchedule_Handler,
		},
		{
			MethodName: "WithdrawHostReq",
			Handler:    _WalletService_WithdrawHostReq_Handler,
		},
		{
			MethodName: "WithdrawHostCallback",
			Handler:    _WalletService_WithdrawHostCallback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "delivery/grpc/wallet/wallet.proto",
}
