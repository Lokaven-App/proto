syntax = "proto3";
package wallet;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

message ReqWithdraw {
    string balance_uid        = 1; // hold balanceid
    string tour_id           = 2;
    string schedule_id       = 3;
	int32  amount            = 4;
	string bank_code          = 5;
	string account_holder_name = 6;
	string account_number     = 7;
	string description       = 8;
}

message HostWithdrawCallback {
	string id                          = 1;
	string user_id                      = 2;
	string external_id                  = 3;  
	int32 amount                       = 4;
	string bank_code                    = 5;
	string account_holder_name           = 6;
	string disbursement_description     = 7;
	string failure_code                 = 8;
	bool is_instant                     = 9;
	string status                      = 10;               
	google.protobuf.Timestamp updated_at  = 11;              
	google.protobuf.Timestamp created_at  = 12;     
	repeated string email_to            = 13;       
	repeated string email_cc            = 14;       
	repeated string email_bcc           = 15;
}

message HostWithdrawCallbackResponse {
    string data = 1;
}

message Balance {
    string uid = 1;
    string user_uid = 2;
    int32 amount = 3;
    google.protobuf.Timestamp updated_at = 4;
}

message Balances {
    repeated Balance balances = 1;
}

message BalanceResponse {
    Balance data = 1;
}

// message BalancesResponse {
//     repeated Balances data = 1;
// }

message BalanceRequest {
    string uid = 1;
}

// message BalancesRequest {
//     string user_id = 1;
// }

message Tour {
    string tour_title = 1;
    google.protobuf.Timestamp tour_start_date = 2;
    google.protobuf.Timestamp tour_end_date = 3;
    string schedule_id = 4;
    string tour_id = 5;
}

message LogBalance {
    string uid = 1;
    string balance_uid = 2;
    string user_uid = 3;
    Tour tour = 4;
    int32 amount = 5;
    string type = 6;
    string message = 7;
    string transaction_id = 8;
    google.protobuf.Timestamp updated_at = 9;
}

message SingleLogBalanceResponse {
    LogBalance data = 1;
}

// message LogBalanceResponse {
//     LogBalance data = 1;
// }

message LogsBalanceResponse {
    repeated LogBalance data = 1;
}

// message LogBalanceRequest {
//     string uid = 1;
// }

message LogBalancesRequest {
    string user_id = 1;
    int32 limit = 2;
    int32 offset = 3;
}

message LogBalancesRequestWithSchedule {
    string user_id = 1;
    string tour_id = 2;
    string schedule_id = 3;
}

service WalletService{
    rpc CreateOrAddBalance(LogBalance) returns (BalanceResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users/wallet",
            body    : "*" 
        };
    }

    rpc GetBalance(BalanceRequest) returns (BalanceResponse){
        option (google.api.http) = {
            get : "/api/v1/users/wallets/{uid}",
        };
    }

    // rpc GetBalances(BalancesRequest) returns (BalancesResponse){
    //     option (google.api.http) = {
    //         get : "/api/v1/users/wallets",
    //     };
    // }

    // rpc GetLogBalance(LogBalanceRequest) returns (LogBalanceResponse){
    //     option (google.api.http) = {
    //         get : "/api/v1/users/wallets/logs/{uid}",
    //     };
    // }

    rpc GetLogBalances(LogBalancesRequest) returns (LogsBalanceResponse){
        option (google.api.http) = {
            get : "/api/v1/users/logs-balances/wallets",
        };
    };

    rpc GetLogBalancesSchedule(LogBalancesRequestWithSchedule) returns (SingleLogBalanceResponse){
        option (google.api.http) = {
            get : "/api/v1/users/logs/wallets/{tour_id}/{schedule_id}",
        };
    };

    rpc WithdrawHostReq(ReqWithdraw) returns (SingleLogBalanceResponse){
        option (google.api.http) = {
            post    : "/api/v1/users/wallet/withdraw",
            body    : "*" 
        };
    };

    rpc WithdrawHostCallback(HostWithdrawCallback) returns (HostWithdrawCallbackResponse){
        option (google.api.http) = {
            post    : "/api/v1/users/wallet/withdraw-callback",
            body    : "*" 
        };
    };

}
