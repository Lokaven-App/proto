syntax = "proto3";
package user;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

message User{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    google.protobuf.Timestamp date_of_birth = 6;
    string gender = 7;
    string phone_number = 8;
    string profile_picture_url = 9;
    bool is_verified = 10;
    bool is_suspended = 11;
    string nationality = 12;
    bool deleted_permanently = 13;
    bool is_deactivate = 14;
    google.protobuf.Timestamp created_at = 15;
    string account_number = 16;
}

message Balances {
    string uid = 1;
    string user_uid = 2;
    int32 amount = 3;
    google.protobuf.Timestamp updated_at = 4;
}

message LogsBalance {
    string uid = 1;
    string user_uid = 2;
    int32 amount = 3;
    string type = 4;
    string message = 5;
}

message CreateUserRequest{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    string password_confirmation = 6;
    google.protobuf.Timestamp date_of_birth = 7;
    string gender = 8;
    string phone_number = 9;
    string nationality = 10;
}

message CreateUserResponse{
    CreateUserRequest data = 1;
    string title = 2 ;
    string code = 3 ;
}

message EmailVerificationRequest {
    string email = 1;
    string verification_token = 2;
}

message EmailVerificationResponse {
    EmailVerificationRequest data = 1;
    string title = 2;
    string code = 3;
}

message ResetPasswordTokenRequest {
    string email = 1;
    string param = 2;
}

message ResetPasswordTokenResponse {
    string title = 1;
    string code = 2; 
    ResetPasswordTokenRequest data = 3;
}

message ResetPasswordRequest {
    string param = 1;
    string email = 2;
    string reset_password_token = 3;
    string password = 4;
    string password_confirmation = 5;
}

message ResetPasswordResponse {
    ResetPasswordRequest data =1;
    string title = 2;
    string code = 3; 
}

message UpdateUserRequest{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string old_password = 5;
    string password = 6;
    string password_confirmation = 7;
    google.protobuf.Timestamp date_of_birth = 8;
    string gender = 9;
    string phone_number = 10;
    string profile_picture_url = 11;
    string nationality = 12;
}

message UpdateUserSettingRequest{
    string user_uid = 1;
    google.protobuf.BoolValue email_notification = 2;
    google.protobuf.BoolValue push_notification = 3;
    google.protobuf.StringValue currency_uid = 4;
    google.protobuf.StringValue language_uid = 5;
    google.protobuf.StringValue payment_type_uid = 6;
    google.protobuf.StringValue CreditCardNumber = 7;
}

message Filter{
    string Field = 1;
    string Operator =2;
    string Value = 3;
}

message BrowseRequest{
    repeated Filter filters = 1;
    int32 limit = 2;
    int32 offset = 3;
}

message UpdateUserResponse{
    UpdateUserRequest data = 1;
    string title = 2 ;
    string code = 3;
}

message UpdateUserSettingResponse{
    UpdateUserSettingRequest data = 1;
}

message BrowseUserResponse{
    repeated User data = 1;
}

message Error{
    string source = 1;
    string title = 2;
}

message GetUserByCredentialsRequest{
    string email = 1;
    string password = 2;
}

message GetUserByCredentialsResponse{
    User data = 1;
}

message GetUserRequest{
    string uid = 1;
}

message GetUserResponse{
    User data = 1;
}

message OldUser{
    string uid = 1;
    string user_uid = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    string phone_number = 6;
    string business_name = 7;
    string business_category = 8;
    string business_address = 9;
    string business_about = 10;
    string profile_picture_url = 11;
    string nationality = 12;
    google.protobuf.Timestamp join_at = 13;
    bool is_verified = 14;
    google.protobuf.Timestamp created_at = 15;
}

message ResendEmailVerificationRequest{
    string uid = 1;
    string email = 2;
    string verification_token = 3;
}

message ResendEmailVerificationRespone{
    ResendEmailVerificationRequest data = 1;
    string code = 2;
    string title = 3;
    }

message GetUserInfoRespone{
    ResponseUser data = 1;
    string code = 2;
    string title = 3;
}

message CreateUserHostRequest{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    string password_confirmation = 6;
    google.protobuf.Timestamp date_of_birth = 7;
    string gender = 8;
    string phone_number = 9;
    bool is_verified = 10;
    bool by_admin = 11;
    string nationality = 12;
}

message CreateUserHostResponse{
    CreateUserHostRequest data = 1;
    string code = 2;
    string title = 3;
}

message SignUpAsHostRequest{
    string uid = 1;
    string business_name = 2 ;
    string business_category = 3 ;
    string address = 4 ; 
    repeated Setting settings = 5; 
}

message SignUpAsHostRespone{
    SignUpAsHostRequest data = 1;
    string title = 2 ;
    string code = 3 ;
}

message Setting{
    string key = 1;
    string type = 2;
    string value = 3;
}

message UpdateHostUserRequest{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string old_password = 5;
    string password = 6;
    string password_confirmation = 7;
    google.protobuf.Timestamp date_of_birth = 8 ;
    string gender = 9;
    string phone_number = 10;
    string profile_picture_url = 11;
    string nationality = 12;
}

message UpdateHostUserRespone{
    UpdateHostUserRequest data = 1;
    string code = 2;
    string title = 3; 
}

message RefundResponse{
    string title = 1; 
    int32 code = 2;
}

message GetAllUserRequest{
    string param = 1;
    string search = 2;
    string sort_by = 3;
    int32 page = 5;
    int32 per_page = 6;
}

message GetUsers{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    google.protobuf.Timestamp date_of_birth = 5 ;
    string gender = 6;
    string phone_number = 7;
    string profile_picture_url = 8;
    string nationality = 9;
    bool is_verified = 10 ;
    bool is_deactivate = 11;
    google.protobuf.Timestamp created_at = 12 ;
}

message GetAllUserResponse{
    repeated GetUsers data = 1;
    Paginate paginate = 2;
}

message UserDetail{
    string user_uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    //string password = 5;
    google.protobuf.Timestamp date_of_birth = 6;
    string gender = 7;
    string phone_number = 8;
    string profile_picture_url = 9;
    bool is_suspended = 10;
    bool is_verified_email = 11;
    string nationality = 12;
    string host_id = 13;
    string business_name = 14;
    string business_category = 15;
    string address = 16;
    string business_about  = 17;
    string card_id_type = 18;
    string card_id = 19;
    string person_with_id = 20;
    string bussiness_id_type = 21;
    string bussiness_id = 22;
    string rejection_message = 23;
    bool is_host = 24;
    google.protobuf.Timestamp created_at = 25;
    int32 card_id_status = 26;
    int32 bussiness_id_status = 27;
    string card_number = 28;
    string bussiness_number = 39;
    bool deleted_permanently = 30;
    bool is_deactivate = 31;
    bool is_verified = 32;
    int32 count_package = 33;
}

message UserDetailResponse{
    UserDetail data = 1;
}

message ResponseUser{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    google.protobuf.Timestamp date_of_birth = 6;
    string gender = 7;
    string phone_number = 8;
    string profile_picture_url = 9;
    int32 balance = 10 ; 
    string account_number = 11;
    bool is_verified = 12;
    bool is_suspended = 13;
    string nationality = 14;
    google.protobuf.Timestamp created_at = 15;
    bool deleted_permanently = 16;
    bool is_deactivate = 17;
}

message RequestDelete {
    string uid = 1;
}

message ResponseDelete {
    string title = 1; 
    int32 code = 2;
}


message OldUserResponse {
    string title = 1;
    int32 code = 2;
    OldUser data = 3;
}

message ListOldUserResponse {
    string title = 1;
    int32 code = 2;
    repeated OldUser data = 3;
    Paginate paginate = 4;
}

message Paginate {
  int32 current_page = 1;
  int32 next_page = 2;
  int32 total_page = 3;
  int32 per_page = 4;
  int32 total = 5;
}

message Administrator{
  string uid = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  int32 role_admin = 5;
  string role_name = 6;
  string password = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  google.protobuf.Timestamp last_login = 10;
}

message RequestCreateAdmin{
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  int32 role_admin = 4;
  string password = 5;
  string password_confirmation = 6;
  google.protobuf.Timestamp created_at = 7;
}

message RequestEditAdmin{
  string uid = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string old_password = 5;
  string password = 6;
  string password_confirmation = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message ResponseAdministrator{
    string title = 1;
    int32 code = 2;
    Administrator data = 3;
}

message RequestListAdmin{
    string key = 1;
    int32 page = 2;
    int32 per_page = 3;
}

message ResponseListAdmin{
    repeated Administrator data = 1;
    Paginate paginate = 2;
}

message ResponseDeleteAdmin{
    string title = 1;
    int32 code = 2;
    repeated Administrator data = 3;
}

message RequestEditRoleAdmin{
   string uid = 1; 
   int32 role_admin = 2;
}

message Roles{
    int32 role_admin = 1;
    string role_name = 2;
}

message RequestRoles{
    string key = 1;
}

message ResponseRoles{
    repeated Roles data = 1;
}

message RequestGetAdmin{
    string uid = 1;
}

message RequestIsHost{
     string uid = 1;
}

message ResponseIsHost{
    int32 code = 1;
    string title = 2;
}

message PilotUserRequest{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    string password_confirmation = 6;
    google.protobuf.Timestamp date_of_birth = 7;
    string gender = 8;
    string phone_number = 9;
    string nationality = 10;
    bool pilot_user = 11;
    bool is_verified = 12;
    bool is_host = 13;
    string param = 14;
}

message PilotUser{
    string uid = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    string password = 5;
    string password_confirmation = 6;
    bool pilot_user = 10;
    bool is_host = 11;
    bool is_verified= 12;
}

message PilotUserResponse{
    PilotUser data = 1;
    string title = 2 ;
    int32 code = 3 ;
}

service UserService{

    rpc Deactivate(RequestDelete) returns (ResponseDelete) {
        option (google.api.http) = {
            get    : "/api/v1/users/deactivate/{uid}",
        };
    }

    rpc Reactivate(RequestDelete) returns (ResponseDelete) {
        option (google.api.http) = {
            get    : "/api/v1/users/reactivate/{uid}",
        };
    }


    rpc DeletePermanently(RequestDelete) returns (ResponseDelete) {
        option (google.api.http) = {
            post    : "/api/v1/delete/permanently",
            body    : "*" 
        };
    }

    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users",
            body    : "*" 
        };
    }

    rpc GetUserInfo(User) returns (GetUserInfoRespone){
        option (google.api.http) = {
            get : "/api/v1/users/profile/me",
        };
    }

    rpc Refund(LogsBalance) returns (RefundResponse){
        option (google.api.http) = {
            post : "/api/v1/users/refund/{user_uid}",
            body : "*"
        };
    }

    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            patch : "/api/v1/users/{uid}",
            body : "*"
        };
    }

    rpc GetUser(GetUserRequest) returns (GetUserResponse);

    rpc GetOldUser(GetUserRequest) returns (OldUserResponse){
        option (google.api.http) = {
            get    : "/api/v1/users/olduser/{uid}",
        };
    }

    rpc ListOldUser(GetAllUserRequest) returns (ListOldUserResponse){
        option (google.api.http) = {
            get    : "/api/v1/users/list/permanently",
        };
    }

    rpc GetUserByCredentials(GetUserByCredentialsRequest) returns (GetUserByCredentialsResponse);

    rpc EmailVerification(EmailVerificationRequest) returns (EmailVerificationResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users/emailverification",
            body    : "*" 
        };
    }

    rpc ResendVerification(ResendEmailVerificationRequest) returns (ResendEmailVerificationRespone){
        option (google.api.http) = {
            post : "/api/v1/users/resendemailverification",
            body : "*"
        };
    }

    rpc ResetPasswordToken(ResetPasswordTokenRequest) returns (ResetPasswordTokenResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users/resetpasswordtoken",
            body    : "*" 
        };
    }

    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users/resetpassword",
            body    : "*" 
        };
    }

    // this endpoint only use for handling a sign up host by admin.
    rpc CreateUserHost(CreateUserHostRequest) returns (CreateUserHostResponse);

    rpc SignUpAsHost(SignUpAsHostRequest)returns(SignUpAsHostRespone){
         option (google.api.http) = {
            post    : "/api/v1/users/{uid}/registerhosts",
            body    : "*" 
        };
    }

    // this endpoint only user for handling for update host profile 
    rpc UpdateHostUser(UpdateHostUserRequest) returns (UpdateHostUserRespone);

    rpc GetUserByID(GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get : "/api/v1/users/gets/{uid}",
        };
    }

    // this endpoint only use for handle get all user for admin
    rpc GetAllUser(GetAllUserRequest) returns (GetAllUserResponse);
    

    rpc GetUserDetail(GetUserRequest) returns (UserDetailResponse){
        option (google.api.http) = {
            get : "/api/v1/users/{uid}/details",
        };
    }

    rpc AddNewAdmin(RequestCreateAdmin) returns (ResponseAdministrator){
        option (google.api.http) = {
            post : "/api/v1/users/administrator",
            body : "*"
        };
    }

     rpc EditAdmin(RequestEditAdmin) returns (ResponseAdministrator){
        option (google.api.http) = {
            patch : "/api/v1/users/administrator/{uid}",
            body : "*"
        };
    }

    rpc ListAdmin(RequestListAdmin) returns (ResponseListAdmin){
         option (google.api.http) = {
            get : "/api/v1/users/administrator-list",
        };
    }

    rpc DeleteAdmin(Administrator) returns(ResponseDeleteAdmin){
         option (google.api.http) = {
            delete : "/api/v1/users/administrator/{uid}",
        };
    }

     rpc EditRoleAdmin(RequestEditRoleAdmin) returns (ResponseAdministrator){
        option (google.api.http) = {
            patch : "/api/v1/users/administrator/{uid}/roles",
            body : "*"
        };
    }

    rpc ListRoles(RequestRoles) returns (ResponseRoles){
         option (google.api.http) = {
            get : "/api/v1/users/administrator/roles/list",
        };
    }

    //This endpoint only use for get admin 
    rpc GetAdmin(RequestGetAdmin) returns (ResponseAdministrator);

    //this endpoint only use for update is host by convert by admin
    rpc UpdateIsHost(RequestIsHost) returns (ResponseIsHost);

     rpc CreatePilotUser(PilotUserRequest) returns (PilotUserResponse) {
        option (google.api.http) = {
            post    : "/api/v1/users/pilots",
            body    : "*" 
        };
    }
}