syntax = "proto3";
package host;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";


message TourHost{
    string host_id = 1;
    string first_name = 2;
    string last_name = 3;
    string gender = 4;
    string phone_number = 5;
    google.protobuf.Timestamp date_of_birth = 6;
    string password = 7;
    string profile_picture_url = 8;
    string business_name = 9;
    string business_category = 10;
    string address = 11;
    string business_about  = 12;
    string card_id_type = 13;
    string card_id = 14;
    string person_with_id = 15;
    string bussiness_id_type = 16;
    string bussiness_id = 17;
    bool is_verified = 18;
    string account_number = 19;
    string balance = 20;
    string user_uid = 21;
    string email = 22 ;
    int32 card_id_status = 23;
    int32 bussiness_id_status = 24;
    string card_number = 25;
    string bussiness_number = 26;
    string nationality = 27;
    string rejection_message = 28;
    int32 count_package = 29;
    google.protobuf.Timestamp updated_at = 30;
    google.protobuf.Timestamp created_at = 31;
    google.protobuf.Timestamp verified_at = 32;
}

message UpdateTourHostRequest{
    string host_id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone_number = 4;
    google.protobuf.Timestamp date_of_birth = 5;
    string old_password = 6;
    string password = 7;
    string password_confirmation = 8;
    string profile_picture_url = 9;
    string business_name = 10;
    string business_category = 11;
    string address = 12;
    string business_about = 13;
    string user_uid = 14;
    google.protobuf.Timestamp updated_at = 15;
    string email = 16;
    string gender = 17;
    bool by_admin = 18;
    bool is_verified = 19;
    string nationality = 20;
}

message UpdateTourHostResponse{
    UpdateTourHostRequest data = 1;
    string code = 2;
    string title = 3;
}

enum VerifiedStatus {
    PENDING = 0;
    ONREVIEW = 1;
    ACCEPTED = 2;
    REJECTED = 3;
}

message HostCardID {
    string host_id = 1;
    string card_id = 2;
    string person_with_id = 3;
    VerifiedStatus card_id_status = 4;
    google.protobuf.Timestamp verified_at = 5;
}

message HostBussinessID {
    string host_id = 1;
    string bussiness_id = 2;
    VerifiedStatus bussiness_id_status = 3;
    google.protobuf.Timestamp created_at = 4;
}

message ResponseMessage {
    string status = 1;
    string message = 2;
}

message CreateTourHostRequest{
    string host_id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone_number = 4;
    google.protobuf.Timestamp date_of_birth = 5;
    string password = 6;
    string password_confirmation = 7;
    string business_name = 8;
    string business_category = 9;
    string address = 10;
    string business_about  = 11;
    string card_id_type = 12;
    string card_id = 13;
    string person_with_id = 14;
    string bussiness_id_type = 15;
    string bussiness_id = 16;
    bool is_verified = 17;
    string account_number = 18;
    string balance = 19;
    string user_uid = 20;
    google.protobuf.Timestamp created_at = 21;
    string email = 22 ;
    string gender = 23;
    bool by_admin = 24;
    int32 card_id_status = 25;
    int32 bussiness_id_status = 26;
    string card_number = 27;
    string bussiness_number = 28;
}

message CreateTourHostResponse{
    CreateTourHostRequest data = 1;
    string code = 2;
    string title = 3;
}

message GetTourHostResponse{
    TourHost data = 1;
}

message GetTourHostByIDResponse{
    TourHost data = 1;
}

message GetTourHostRequest{
    string host_id = 1;
}

message GetTourHostRespone{
    TourHost data = 1;
}

message SignUpAsHostRequest{
    string user_uid = 1;
    string business_name = 2 ;
    string business_category = 3 ;
    string address = 4 ;
}

message SignUpAsHostResponse{
    SignUpAsHostRequest data = 1;
    string code = 2;
    string title = 3;
}

message RequestParams {
  string page = 1;
  string per_page = 2;
  string param = 3;
  string key = 4;
}

message Paginate {
  int32 current_page = 1;
  int32 next_page = 2;
  int32 total_page = 3;
  int32 per_page = 4;
  int32 total = 5;
}

message ResponseTourHostList{
  int32 code = 1;
  string title = 2;
  repeated TourHost data = 3;
  Paginate paginate = 4;
}

message RequestVerified{
    repeated HostIDS hosts = 1;
}

message HostIDS{
    string host_id = 1;
    bool is_verified = 2;
}

message ResponseVerified{
    int32 code = 1;
    string title = 2;
    repeated TourHost data = 3;
}

message RequestBusinessCardID {
    string host_id = 1;
    string card_id = 2;
    string person_with_id = 3;
    VerifiedStatus card_id_status = 4;
    string bussiness_id = 5;
    VerifiedStatus bussiness_id_status = 6;
    string rejection_message = 7;
    bool is_verified = 8;
    google.protobuf.Timestamp verified_at = 9;
    google.protobuf.Timestamp updated_at = 10;
}

message ResponseBusinessCardID{
    int32 code = 1;
    string title = 2;
    TourHost data = 3;
}

message RequestAdministratorUpdateHost{
    string user_uid = 1;
    string business_name = 2;
    string business_category = 3;
    string address = 4;
    string business_about = 5;
    string card_id_type = 6;
    string card_id = 7;
    VerifiedStatus card_id_status = 8;
    string person_with_id = 9;
    string bussiness_id_type = 10;
    string bussiness_id = 11;
    VerifiedStatus bussiness_id_status = 12;
    bool is_verified = 13;
    bool by_admin = 14;
    google.protobuf.Timestamp updated_at = 15;
    google.protobuf.Timestamp created_at = 16;
}

message ResponseAdministratorUpdateHost{
    int32 code = 1;
    string title = 2;
    TourHost data = 3;
}

service TourHostService{
    rpc UpdateTourHost(UpdateTourHostRequest) returns (UpdateTourHostResponse){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts/{host_id}",
            body : "*"
        };
    }

    rpc GetTourHostByID(TourHost) returns (GetTourHostByIDResponse){
        option (google.api.http) = {
            get : "/api/v1/tourhosts/{host_id}"
        };
    }

    rpc CreateTourHost(CreateTourHostRequest) returns (CreateTourHostResponse){
        option (google.api.http) = {
            post : "/api/v1/tourhosts",
            body : "*"
        };
    }

    rpc UpdateHostCardID (HostCardID) returns (ResponseMessage){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts/verify-card/{host_id}",
            body: "*"
        };
    }

    rpc UpdateHostBussinessID (HostBussinessID) returns (ResponseMessage){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts/verify-bussiness/{host_id}",
            body: "*"
        };
    }

    // this endpoint only use for handling to sign up guest as host
    rpc SignUpAsHost(SignUpAsHostRequest) returns (SignUpAsHostResponse);

    rpc GetTourHostInfo(TourHost) returns (GetTourHostResponse){
        option (google.api.http) = {
            get : "/api/v1/tourhosts/profile/me"
        };
    }

    rpc GetTourHostByUserUID(TourHost) returns (GetTourHostResponse){
        option (google.api.http) = {
            get : "/api/v1/tourhosts/gets/{user_uid}"
        };
    }

    rpc VerifiedHostByAdmin (RequestVerified) returns (ResponseVerified){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts-verification",
            body: "*"
        };
    }

    rpc ListTourHostByAdmin (RequestParams) returns (ResponseTourHostList){
        option (google.api.http) = {
            get : "/api/v1/tourhosts-list"
        };
    }

    rpc UpdateStatusCardBusinessIDByAdmin (RequestBusinessCardID) returns (ResponseBusinessCardID){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts/verification/status",
            body : "*"
        };
    }

    rpc UpdateTourHostByAdmin(RequestAdministratorUpdateHost) returns (ResponseAdministratorUpdateHost){
        option (google.api.http) = {
            patch : "/api/v1/tourhosts/{user_uid}/administrator",
            body : "*"
        };
    }

}
