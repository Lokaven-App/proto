// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/host.proto

package host

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VerifiedStatus int32

const (
	VerifiedStatus_PENDING  VerifiedStatus = 0
	VerifiedStatus_ONREVIEW VerifiedStatus = 1
	VerifiedStatus_ACCEPTED VerifiedStatus = 2
	VerifiedStatus_REJECTED VerifiedStatus = 3
)

var VerifiedStatus_name = map[int32]string{
	0: "PENDING",
	1: "ONREVIEW",
	2: "ACCEPTED",
	3: "REJECTED",
}

var VerifiedStatus_value = map[string]int32{
	"PENDING":  0,
	"ONREVIEW": 1,
	"ACCEPTED": 2,
	"REJECTED": 3,
}

func (x VerifiedStatus) String() string {
	return proto.EnumName(VerifiedStatus_name, int32(x))
}

func (VerifiedStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{0}
}

type TourHost struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	FirstName            string               `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string               `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Gender               string               `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	PhoneNumber          string               `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth          *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Password             string               `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	ProfilePictureUrl    string               `protobuf:"bytes,8,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	BusinessName         string               `protobuf:"bytes,9,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessCategory     string               `protobuf:"bytes,10,opt,name=business_category,json=businessCategory,proto3" json:"business_category,omitempty"`
	Address              string               `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	BusinessAbout        string               `protobuf:"bytes,12,opt,name=business_about,json=businessAbout,proto3" json:"business_about,omitempty"`
	CardIdType           string               `protobuf:"bytes,13,opt,name=card_id_type,json=cardIdType,proto3" json:"card_id_type,omitempty"`
	CardId               string               `protobuf:"bytes,14,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PersonWithId         string               `protobuf:"bytes,15,opt,name=person_with_id,json=personWithId,proto3" json:"person_with_id,omitempty"`
	BussinessIdType      string               `protobuf:"bytes,16,opt,name=bussiness_id_type,json=bussinessIdType,proto3" json:"bussiness_id_type,omitempty"`
	BussinessId          string               `protobuf:"bytes,17,opt,name=bussiness_id,json=bussinessId,proto3" json:"bussiness_id,omitempty"`
	IsVerified           bool                 `protobuf:"varint,18,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	AccountNumber        string               `protobuf:"bytes,19,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Balance              string               `protobuf:"bytes,20,opt,name=balance,proto3" json:"balance,omitempty"`
	UserUid              string               `protobuf:"bytes,21,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	Email                string               `protobuf:"bytes,22,opt,name=email,proto3" json:"email,omitempty"`
	CardIdStatus         int32                `protobuf:"varint,23,opt,name=card_id_status,json=cardIdStatus,proto3" json:"card_id_status,omitempty"`
	BussinessIdStatus    int32                `protobuf:"varint,24,opt,name=bussiness_id_status,json=bussinessIdStatus,proto3" json:"bussiness_id_status,omitempty"`
	CardNumber           string               `protobuf:"bytes,25,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	BussinessNumber      string               `protobuf:"bytes,26,opt,name=bussiness_number,json=bussinessNumber,proto3" json:"bussiness_number,omitempty"`
	Nationality          string               `protobuf:"bytes,27,opt,name=nationality,proto3" json:"nationality,omitempty"`
	RejectionMessage     string               `protobuf:"bytes,28,opt,name=rejection_message,json=rejectionMessage,proto3" json:"rejection_message,omitempty"`
	CountPackage         int32                `protobuf:"varint,29,opt,name=count_package,json=countPackage,proto3" json:"count_package,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	VerifiedAt           *timestamp.Timestamp `protobuf:"bytes,32,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TourHost) Reset()         { *m = TourHost{} }
func (m *TourHost) String() string { return proto.CompactTextString(m) }
func (*TourHost) ProtoMessage()    {}
func (*TourHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{0}
}

func (m *TourHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TourHost.Unmarshal(m, b)
}
func (m *TourHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TourHost.Marshal(b, m, deterministic)
}
func (m *TourHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TourHost.Merge(m, src)
}
func (m *TourHost) XXX_Size() int {
	return xxx_messageInfo_TourHost.Size(m)
}
func (m *TourHost) XXX_DiscardUnknown() {
	xxx_messageInfo_TourHost.DiscardUnknown(m)
}

var xxx_messageInfo_TourHost proto.InternalMessageInfo

func (m *TourHost) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *TourHost) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TourHost) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TourHost) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *TourHost) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TourHost) GetDateOfBirth() *timestamp.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *TourHost) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TourHost) GetProfilePictureUrl() string {
	if m != nil {
		return m.ProfilePictureUrl
	}
	return ""
}

func (m *TourHost) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *TourHost) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *TourHost) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TourHost) GetBusinessAbout() string {
	if m != nil {
		return m.BusinessAbout
	}
	return ""
}

func (m *TourHost) GetCardIdType() string {
	if m != nil {
		return m.CardIdType
	}
	return ""
}

func (m *TourHost) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *TourHost) GetPersonWithId() string {
	if m != nil {
		return m.PersonWithId
	}
	return ""
}

func (m *TourHost) GetBussinessIdType() string {
	if m != nil {
		return m.BussinessIdType
	}
	return ""
}

func (m *TourHost) GetBussinessId() string {
	if m != nil {
		return m.BussinessId
	}
	return ""
}

func (m *TourHost) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *TourHost) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *TourHost) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *TourHost) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *TourHost) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TourHost) GetCardIdStatus() int32 {
	if m != nil {
		return m.CardIdStatus
	}
	return 0
}

func (m *TourHost) GetBussinessIdStatus() int32 {
	if m != nil {
		return m.BussinessIdStatus
	}
	return 0
}

func (m *TourHost) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *TourHost) GetBussinessNumber() string {
	if m != nil {
		return m.BussinessNumber
	}
	return ""
}

func (m *TourHost) GetNationality() string {
	if m != nil {
		return m.Nationality
	}
	return ""
}

func (m *TourHost) GetRejectionMessage() string {
	if m != nil {
		return m.RejectionMessage
	}
	return ""
}

func (m *TourHost) GetCountPackage() int32 {
	if m != nil {
		return m.CountPackage
	}
	return 0
}

func (m *TourHost) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *TourHost) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TourHost) GetVerifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.VerifiedAt
	}
	return nil
}

type UpdateTourHostRequest struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	FirstName            string               `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string               `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber          string               `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	OldPassword          string               `protobuf:"bytes,6,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	Password             string               `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	PasswordConfirmation string               `protobuf:"bytes,8,opt,name=password_confirmation,json=passwordConfirmation,proto3" json:"password_confirmation,omitempty"`
	ProfilePictureUrl    string               `protobuf:"bytes,9,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	BusinessName         string               `protobuf:"bytes,10,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessCategory     string               `protobuf:"bytes,11,opt,name=business_category,json=businessCategory,proto3" json:"business_category,omitempty"`
	Address              string               `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	BusinessAbout        string               `protobuf:"bytes,13,opt,name=business_about,json=businessAbout,proto3" json:"business_about,omitempty"`
	UserUid              string               `protobuf:"bytes,14,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Email                string               `protobuf:"bytes,16,opt,name=email,proto3" json:"email,omitempty"`
	Gender               string               `protobuf:"bytes,17,opt,name=gender,proto3" json:"gender,omitempty"`
	ByAdmin              bool                 `protobuf:"varint,18,opt,name=by_admin,json=byAdmin,proto3" json:"by_admin,omitempty"`
	IsVerified           bool                 `protobuf:"varint,19,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	Nationality          string               `protobuf:"bytes,20,opt,name=nationality,proto3" json:"nationality,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateTourHostRequest) Reset()         { *m = UpdateTourHostRequest{} }
func (m *UpdateTourHostRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTourHostRequest) ProtoMessage()    {}
func (*UpdateTourHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{1}
}

func (m *UpdateTourHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTourHostRequest.Unmarshal(m, b)
}
func (m *UpdateTourHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTourHostRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTourHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTourHostRequest.Merge(m, src)
}
func (m *UpdateTourHostRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTourHostRequest.Size(m)
}
func (m *UpdateTourHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTourHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTourHostRequest proto.InternalMessageInfo

func (m *UpdateTourHostRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *UpdateTourHostRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UpdateTourHostRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UpdateTourHostRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UpdateTourHostRequest) GetDateOfBirth() *timestamp.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *UpdateTourHostRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *UpdateTourHostRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateTourHostRequest) GetPasswordConfirmation() string {
	if m != nil {
		return m.PasswordConfirmation
	}
	return ""
}

func (m *UpdateTourHostRequest) GetProfilePictureUrl() string {
	if m != nil {
		return m.ProfilePictureUrl
	}
	return ""
}

func (m *UpdateTourHostRequest) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *UpdateTourHostRequest) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *UpdateTourHostRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UpdateTourHostRequest) GetBusinessAbout() string {
	if m != nil {
		return m.BusinessAbout
	}
	return ""
}

func (m *UpdateTourHostRequest) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *UpdateTourHostRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateTourHostRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateTourHostRequest) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UpdateTourHostRequest) GetByAdmin() bool {
	if m != nil {
		return m.ByAdmin
	}
	return false
}

func (m *UpdateTourHostRequest) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *UpdateTourHostRequest) GetNationality() string {
	if m != nil {
		return m.Nationality
	}
	return ""
}

type UpdateTourHostResponse struct {
	Data                 *UpdateTourHostRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code                 string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Title                string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateTourHostResponse) Reset()         { *m = UpdateTourHostResponse{} }
func (m *UpdateTourHostResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTourHostResponse) ProtoMessage()    {}
func (*UpdateTourHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{2}
}

func (m *UpdateTourHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTourHostResponse.Unmarshal(m, b)
}
func (m *UpdateTourHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTourHostResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTourHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTourHostResponse.Merge(m, src)
}
func (m *UpdateTourHostResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTourHostResponse.Size(m)
}
func (m *UpdateTourHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTourHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTourHostResponse proto.InternalMessageInfo

func (m *UpdateTourHostResponse) GetData() *UpdateTourHostRequest {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateTourHostResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateTourHostResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type HostCardID struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	CardId               string               `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PersonWithId         string               `protobuf:"bytes,3,opt,name=person_with_id,json=personWithId,proto3" json:"person_with_id,omitempty"`
	CardIdStatus         VerifiedStatus       `protobuf:"varint,4,opt,name=card_id_status,json=cardIdStatus,proto3,enum=host.VerifiedStatus" json:"card_id_status,omitempty"`
	VerifiedAt           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HostCardID) Reset()         { *m = HostCardID{} }
func (m *HostCardID) String() string { return proto.CompactTextString(m) }
func (*HostCardID) ProtoMessage()    {}
func (*HostCardID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{3}
}

func (m *HostCardID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostCardID.Unmarshal(m, b)
}
func (m *HostCardID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostCardID.Marshal(b, m, deterministic)
}
func (m *HostCardID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostCardID.Merge(m, src)
}
func (m *HostCardID) XXX_Size() int {
	return xxx_messageInfo_HostCardID.Size(m)
}
func (m *HostCardID) XXX_DiscardUnknown() {
	xxx_messageInfo_HostCardID.DiscardUnknown(m)
}

var xxx_messageInfo_HostCardID proto.InternalMessageInfo

func (m *HostCardID) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *HostCardID) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *HostCardID) GetPersonWithId() string {
	if m != nil {
		return m.PersonWithId
	}
	return ""
}

func (m *HostCardID) GetCardIdStatus() VerifiedStatus {
	if m != nil {
		return m.CardIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *HostCardID) GetVerifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.VerifiedAt
	}
	return nil
}

type HostBussinessID struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	BussinessId          string               `protobuf:"bytes,2,opt,name=bussiness_id,json=bussinessId,proto3" json:"bussiness_id,omitempty"`
	BussinessIdStatus    VerifiedStatus       `protobuf:"varint,3,opt,name=bussiness_id_status,json=bussinessIdStatus,proto3,enum=host.VerifiedStatus" json:"bussiness_id_status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HostBussinessID) Reset()         { *m = HostBussinessID{} }
func (m *HostBussinessID) String() string { return proto.CompactTextString(m) }
func (*HostBussinessID) ProtoMessage()    {}
func (*HostBussinessID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{4}
}

func (m *HostBussinessID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostBussinessID.Unmarshal(m, b)
}
func (m *HostBussinessID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostBussinessID.Marshal(b, m, deterministic)
}
func (m *HostBussinessID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostBussinessID.Merge(m, src)
}
func (m *HostBussinessID) XXX_Size() int {
	return xxx_messageInfo_HostBussinessID.Size(m)
}
func (m *HostBussinessID) XXX_DiscardUnknown() {
	xxx_messageInfo_HostBussinessID.DiscardUnknown(m)
}

var xxx_messageInfo_HostBussinessID proto.InternalMessageInfo

func (m *HostBussinessID) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *HostBussinessID) GetBussinessId() string {
	if m != nil {
		return m.BussinessId
	}
	return ""
}

func (m *HostBussinessID) GetBussinessIdStatus() VerifiedStatus {
	if m != nil {
		return m.BussinessIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *HostBussinessID) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ResponseMessage struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{5}
}

func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMessage.Unmarshal(m, b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseMessage.Size(m)
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResponseMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateTourHostRequest struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	FirstName            string               `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string               `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber          string               `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Password             string               `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	PasswordConfirmation string               `protobuf:"bytes,7,opt,name=password_confirmation,json=passwordConfirmation,proto3" json:"password_confirmation,omitempty"`
	BusinessName         string               `protobuf:"bytes,8,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessCategory     string               `protobuf:"bytes,9,opt,name=business_category,json=businessCategory,proto3" json:"business_category,omitempty"`
	Address              string               `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	BusinessAbout        string               `protobuf:"bytes,11,opt,name=business_about,json=businessAbout,proto3" json:"business_about,omitempty"`
	CardIdType           string               `protobuf:"bytes,12,opt,name=card_id_type,json=cardIdType,proto3" json:"card_id_type,omitempty"`
	CardId               string               `protobuf:"bytes,13,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PersonWithId         string               `protobuf:"bytes,14,opt,name=person_with_id,json=personWithId,proto3" json:"person_with_id,omitempty"`
	BussinessIdType      string               `protobuf:"bytes,15,opt,name=bussiness_id_type,json=bussinessIdType,proto3" json:"bussiness_id_type,omitempty"`
	BussinessId          string               `protobuf:"bytes,16,opt,name=bussiness_id,json=bussinessId,proto3" json:"bussiness_id,omitempty"`
	IsVerified           bool                 `protobuf:"varint,17,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	AccountNumber        string               `protobuf:"bytes,18,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Balance              string               `protobuf:"bytes,19,opt,name=balance,proto3" json:"balance,omitempty"`
	UserUid              string               `protobuf:"bytes,20,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Email                string               `protobuf:"bytes,22,opt,name=email,proto3" json:"email,omitempty"`
	Gender               string               `protobuf:"bytes,23,opt,name=gender,proto3" json:"gender,omitempty"`
	ByAdmin              bool                 `protobuf:"varint,24,opt,name=by_admin,json=byAdmin,proto3" json:"by_admin,omitempty"`
	CardIdStatus         int32                `protobuf:"varint,25,opt,name=card_id_status,json=cardIdStatus,proto3" json:"card_id_status,omitempty"`
	BussinessIdStatus    int32                `protobuf:"varint,26,opt,name=bussiness_id_status,json=bussinessIdStatus,proto3" json:"bussiness_id_status,omitempty"`
	CardNumber           string               `protobuf:"bytes,27,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	BussinessNumber      string               `protobuf:"bytes,28,opt,name=bussiness_number,json=bussinessNumber,proto3" json:"bussiness_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateTourHostRequest) Reset()         { *m = CreateTourHostRequest{} }
func (m *CreateTourHostRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTourHostRequest) ProtoMessage()    {}
func (*CreateTourHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{6}
}

func (m *CreateTourHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTourHostRequest.Unmarshal(m, b)
}
func (m *CreateTourHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTourHostRequest.Marshal(b, m, deterministic)
}
func (m *CreateTourHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTourHostRequest.Merge(m, src)
}
func (m *CreateTourHostRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTourHostRequest.Size(m)
}
func (m *CreateTourHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTourHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTourHostRequest proto.InternalMessageInfo

func (m *CreateTourHostRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *CreateTourHostRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateTourHostRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *CreateTourHostRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *CreateTourHostRequest) GetDateOfBirth() *timestamp.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *CreateTourHostRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateTourHostRequest) GetPasswordConfirmation() string {
	if m != nil {
		return m.PasswordConfirmation
	}
	return ""
}

func (m *CreateTourHostRequest) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *CreateTourHostRequest) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *CreateTourHostRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateTourHostRequest) GetBusinessAbout() string {
	if m != nil {
		return m.BusinessAbout
	}
	return ""
}

func (m *CreateTourHostRequest) GetCardIdType() string {
	if m != nil {
		return m.CardIdType
	}
	return ""
}

func (m *CreateTourHostRequest) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *CreateTourHostRequest) GetPersonWithId() string {
	if m != nil {
		return m.PersonWithId
	}
	return ""
}

func (m *CreateTourHostRequest) GetBussinessIdType() string {
	if m != nil {
		return m.BussinessIdType
	}
	return ""
}

func (m *CreateTourHostRequest) GetBussinessId() string {
	if m != nil {
		return m.BussinessId
	}
	return ""
}

func (m *CreateTourHostRequest) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *CreateTourHostRequest) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *CreateTourHostRequest) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *CreateTourHostRequest) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *CreateTourHostRequest) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CreateTourHostRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateTourHostRequest) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *CreateTourHostRequest) GetByAdmin() bool {
	if m != nil {
		return m.ByAdmin
	}
	return false
}

func (m *CreateTourHostRequest) GetCardIdStatus() int32 {
	if m != nil {
		return m.CardIdStatus
	}
	return 0
}

func (m *CreateTourHostRequest) GetBussinessIdStatus() int32 {
	if m != nil {
		return m.BussinessIdStatus
	}
	return 0
}

func (m *CreateTourHostRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *CreateTourHostRequest) GetBussinessNumber() string {
	if m != nil {
		return m.BussinessNumber
	}
	return ""
}

type CreateTourHostResponse struct {
	Data                 *CreateTourHostRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code                 string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Title                string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateTourHostResponse) Reset()         { *m = CreateTourHostResponse{} }
func (m *CreateTourHostResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTourHostResponse) ProtoMessage()    {}
func (*CreateTourHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{7}
}

func (m *CreateTourHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTourHostResponse.Unmarshal(m, b)
}
func (m *CreateTourHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTourHostResponse.Marshal(b, m, deterministic)
}
func (m *CreateTourHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTourHostResponse.Merge(m, src)
}
func (m *CreateTourHostResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTourHostResponse.Size(m)
}
func (m *CreateTourHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTourHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTourHostResponse proto.InternalMessageInfo

func (m *CreateTourHostResponse) GetData() *CreateTourHostRequest {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateTourHostResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CreateTourHostResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type GetTourHostResponse struct {
	Data                 *TourHost `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTourHostResponse) Reset()         { *m = GetTourHostResponse{} }
func (m *GetTourHostResponse) String() string { return proto.CompactTextString(m) }
func (*GetTourHostResponse) ProtoMessage()    {}
func (*GetTourHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{8}
}

func (m *GetTourHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTourHostResponse.Unmarshal(m, b)
}
func (m *GetTourHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTourHostResponse.Marshal(b, m, deterministic)
}
func (m *GetTourHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTourHostResponse.Merge(m, src)
}
func (m *GetTourHostResponse) XXX_Size() int {
	return xxx_messageInfo_GetTourHostResponse.Size(m)
}
func (m *GetTourHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTourHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTourHostResponse proto.InternalMessageInfo

func (m *GetTourHostResponse) GetData() *TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTourHostByIDResponse struct {
	Data                 *TourHost `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTourHostByIDResponse) Reset()         { *m = GetTourHostByIDResponse{} }
func (m *GetTourHostByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetTourHostByIDResponse) ProtoMessage()    {}
func (*GetTourHostByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{9}
}

func (m *GetTourHostByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTourHostByIDResponse.Unmarshal(m, b)
}
func (m *GetTourHostByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTourHostByIDResponse.Marshal(b, m, deterministic)
}
func (m *GetTourHostByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTourHostByIDResponse.Merge(m, src)
}
func (m *GetTourHostByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetTourHostByIDResponse.Size(m)
}
func (m *GetTourHostByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTourHostByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTourHostByIDResponse proto.InternalMessageInfo

func (m *GetTourHostByIDResponse) GetData() *TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTourHostRequest struct {
	HostId               string   `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTourHostRequest) Reset()         { *m = GetTourHostRequest{} }
func (m *GetTourHostRequest) String() string { return proto.CompactTextString(m) }
func (*GetTourHostRequest) ProtoMessage()    {}
func (*GetTourHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{10}
}

func (m *GetTourHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTourHostRequest.Unmarshal(m, b)
}
func (m *GetTourHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTourHostRequest.Marshal(b, m, deterministic)
}
func (m *GetTourHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTourHostRequest.Merge(m, src)
}
func (m *GetTourHostRequest) XXX_Size() int {
	return xxx_messageInfo_GetTourHostRequest.Size(m)
}
func (m *GetTourHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTourHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTourHostRequest proto.InternalMessageInfo

func (m *GetTourHostRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

type GetTourHostRespone struct {
	Data                 *TourHost `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTourHostRespone) Reset()         { *m = GetTourHostRespone{} }
func (m *GetTourHostRespone) String() string { return proto.CompactTextString(m) }
func (*GetTourHostRespone) ProtoMessage()    {}
func (*GetTourHostRespone) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{11}
}

func (m *GetTourHostRespone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTourHostRespone.Unmarshal(m, b)
}
func (m *GetTourHostRespone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTourHostRespone.Marshal(b, m, deterministic)
}
func (m *GetTourHostRespone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTourHostRespone.Merge(m, src)
}
func (m *GetTourHostRespone) XXX_Size() int {
	return xxx_messageInfo_GetTourHostRespone.Size(m)
}
func (m *GetTourHostRespone) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTourHostRespone.DiscardUnknown(m)
}

var xxx_messageInfo_GetTourHostRespone proto.InternalMessageInfo

func (m *GetTourHostRespone) GetData() *TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

type SignUpAsHostRequest struct {
	UserUid              string   `protobuf:"bytes,1,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	BusinessName         string   `protobuf:"bytes,2,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessCategory     string   `protobuf:"bytes,3,opt,name=business_category,json=businessCategory,proto3" json:"business_category,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpAsHostRequest) Reset()         { *m = SignUpAsHostRequest{} }
func (m *SignUpAsHostRequest) String() string { return proto.CompactTextString(m) }
func (*SignUpAsHostRequest) ProtoMessage()    {}
func (*SignUpAsHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{12}
}

func (m *SignUpAsHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpAsHostRequest.Unmarshal(m, b)
}
func (m *SignUpAsHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpAsHostRequest.Marshal(b, m, deterministic)
}
func (m *SignUpAsHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpAsHostRequest.Merge(m, src)
}
func (m *SignUpAsHostRequest) XXX_Size() int {
	return xxx_messageInfo_SignUpAsHostRequest.Size(m)
}
func (m *SignUpAsHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpAsHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpAsHostRequest proto.InternalMessageInfo

func (m *SignUpAsHostRequest) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *SignUpAsHostRequest) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *SignUpAsHostRequest) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *SignUpAsHostRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SignUpAsHostResponse struct {
	Data                 *SignUpAsHostRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code                 string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SignUpAsHostResponse) Reset()         { *m = SignUpAsHostResponse{} }
func (m *SignUpAsHostResponse) String() string { return proto.CompactTextString(m) }
func (*SignUpAsHostResponse) ProtoMessage()    {}
func (*SignUpAsHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{13}
}

func (m *SignUpAsHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpAsHostResponse.Unmarshal(m, b)
}
func (m *SignUpAsHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpAsHostResponse.Marshal(b, m, deterministic)
}
func (m *SignUpAsHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpAsHostResponse.Merge(m, src)
}
func (m *SignUpAsHostResponse) XXX_Size() int {
	return xxx_messageInfo_SignUpAsHostResponse.Size(m)
}
func (m *SignUpAsHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpAsHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpAsHostResponse proto.InternalMessageInfo

func (m *SignUpAsHostResponse) GetData() *SignUpAsHostRequest {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignUpAsHostResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SignUpAsHostResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type RequestParams struct {
	Page                 string   `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              string   `protobuf:"bytes,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Param                string   `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	SortBy               string   `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestParams) Reset()         { *m = RequestParams{} }
func (m *RequestParams) String() string { return proto.CompactTextString(m) }
func (*RequestParams) ProtoMessage()    {}
func (*RequestParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{14}
}

func (m *RequestParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestParams.Unmarshal(m, b)
}
func (m *RequestParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestParams.Marshal(b, m, deterministic)
}
func (m *RequestParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestParams.Merge(m, src)
}
func (m *RequestParams) XXX_Size() int {
	return xxx_messageInfo_RequestParams.Size(m)
}
func (m *RequestParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestParams.DiscardUnknown(m)
}

var xxx_messageInfo_RequestParams proto.InternalMessageInfo

func (m *RequestParams) GetPage() string {
	if m != nil {
		return m.Page
	}
	return ""
}

func (m *RequestParams) GetPerPage() string {
	if m != nil {
		return m.PerPage
	}
	return ""
}

func (m *RequestParams) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *RequestParams) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestParams) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type Paginate struct {
	CurrentPage          int32    `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	NextPage             int32    `protobuf:"varint,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TotalPage            int32    `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	PerPage              int32    `protobuf:"varint,4,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Total                int32    `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Paginate) Reset()         { *m = Paginate{} }
func (m *Paginate) String() string { return proto.CompactTextString(m) }
func (*Paginate) ProtoMessage()    {}
func (*Paginate) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{15}
}

func (m *Paginate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Paginate.Unmarshal(m, b)
}
func (m *Paginate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Paginate.Marshal(b, m, deterministic)
}
func (m *Paginate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Paginate.Merge(m, src)
}
func (m *Paginate) XXX_Size() int {
	return xxx_messageInfo_Paginate.Size(m)
}
func (m *Paginate) XXX_DiscardUnknown() {
	xxx_messageInfo_Paginate.DiscardUnknown(m)
}

var xxx_messageInfo_Paginate proto.InternalMessageInfo

func (m *Paginate) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *Paginate) GetNextPage() int32 {
	if m != nil {
		return m.NextPage
	}
	return 0
}

func (m *Paginate) GetTotalPage() int32 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *Paginate) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *Paginate) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ResponseTourHostList struct {
	Code                 int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Data                 []*TourHost `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Paginate             *Paginate   `protobuf:"bytes,4,opt,name=paginate,proto3" json:"paginate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResponseTourHostList) Reset()         { *m = ResponseTourHostList{} }
func (m *ResponseTourHostList) String() string { return proto.CompactTextString(m) }
func (*ResponseTourHostList) ProtoMessage()    {}
func (*ResponseTourHostList) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{16}
}

func (m *ResponseTourHostList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseTourHostList.Unmarshal(m, b)
}
func (m *ResponseTourHostList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseTourHostList.Marshal(b, m, deterministic)
}
func (m *ResponseTourHostList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseTourHostList.Merge(m, src)
}
func (m *ResponseTourHostList) XXX_Size() int {
	return xxx_messageInfo_ResponseTourHostList.Size(m)
}
func (m *ResponseTourHostList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseTourHostList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseTourHostList proto.InternalMessageInfo

func (m *ResponseTourHostList) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseTourHostList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseTourHostList) GetData() []*TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResponseTourHostList) GetPaginate() *Paginate {
	if m != nil {
		return m.Paginate
	}
	return nil
}

type RequestVerified struct {
	Hosts                []*HostIDS `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestVerified) Reset()         { *m = RequestVerified{} }
func (m *RequestVerified) String() string { return proto.CompactTextString(m) }
func (*RequestVerified) ProtoMessage()    {}
func (*RequestVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{17}
}

func (m *RequestVerified) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVerified.Unmarshal(m, b)
}
func (m *RequestVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVerified.Marshal(b, m, deterministic)
}
func (m *RequestVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVerified.Merge(m, src)
}
func (m *RequestVerified) XXX_Size() int {
	return xxx_messageInfo_RequestVerified.Size(m)
}
func (m *RequestVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVerified.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVerified proto.InternalMessageInfo

func (m *RequestVerified) GetHosts() []*HostIDS {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type HostIDS struct {
	HostId               string   `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	IsVerified           bool     `protobuf:"varint,2,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostIDS) Reset()         { *m = HostIDS{} }
func (m *HostIDS) String() string { return proto.CompactTextString(m) }
func (*HostIDS) ProtoMessage()    {}
func (*HostIDS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{18}
}

func (m *HostIDS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostIDS.Unmarshal(m, b)
}
func (m *HostIDS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostIDS.Marshal(b, m, deterministic)
}
func (m *HostIDS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostIDS.Merge(m, src)
}
func (m *HostIDS) XXX_Size() int {
	return xxx_messageInfo_HostIDS.Size(m)
}
func (m *HostIDS) XXX_DiscardUnknown() {
	xxx_messageInfo_HostIDS.DiscardUnknown(m)
}

var xxx_messageInfo_HostIDS proto.InternalMessageInfo

func (m *HostIDS) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *HostIDS) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

type ResponseVerified struct {
	Code                 int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Data                 []*TourHost `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResponseVerified) Reset()         { *m = ResponseVerified{} }
func (m *ResponseVerified) String() string { return proto.CompactTextString(m) }
func (*ResponseVerified) ProtoMessage()    {}
func (*ResponseVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{19}
}

func (m *ResponseVerified) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseVerified.Unmarshal(m, b)
}
func (m *ResponseVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseVerified.Marshal(b, m, deterministic)
}
func (m *ResponseVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseVerified.Merge(m, src)
}
func (m *ResponseVerified) XXX_Size() int {
	return xxx_messageInfo_ResponseVerified.Size(m)
}
func (m *ResponseVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseVerified.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseVerified proto.InternalMessageInfo

func (m *ResponseVerified) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseVerified) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseVerified) GetData() []*TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestBusinessCardID struct {
	HostId               string               `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	CardId               string               `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PersonWithId         string               `protobuf:"bytes,3,opt,name=person_with_id,json=personWithId,proto3" json:"person_with_id,omitempty"`
	CardIdStatus         VerifiedStatus       `protobuf:"varint,4,opt,name=card_id_status,json=cardIdStatus,proto3,enum=host.VerifiedStatus" json:"card_id_status,omitempty"`
	BussinessId          string               `protobuf:"bytes,5,opt,name=bussiness_id,json=bussinessId,proto3" json:"bussiness_id,omitempty"`
	BussinessIdStatus    VerifiedStatus       `protobuf:"varint,6,opt,name=bussiness_id_status,json=bussinessIdStatus,proto3,enum=host.VerifiedStatus" json:"bussiness_id_status,omitempty"`
	RejectionMessage     string               `protobuf:"bytes,7,opt,name=rejection_message,json=rejectionMessage,proto3" json:"rejection_message,omitempty"`
	IsVerified           bool                 `protobuf:"varint,8,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	VerifiedAt           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestBusinessCardID) Reset()         { *m = RequestBusinessCardID{} }
func (m *RequestBusinessCardID) String() string { return proto.CompactTextString(m) }
func (*RequestBusinessCardID) ProtoMessage()    {}
func (*RequestBusinessCardID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{20}
}

func (m *RequestBusinessCardID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBusinessCardID.Unmarshal(m, b)
}
func (m *RequestBusinessCardID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBusinessCardID.Marshal(b, m, deterministic)
}
func (m *RequestBusinessCardID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBusinessCardID.Merge(m, src)
}
func (m *RequestBusinessCardID) XXX_Size() int {
	return xxx_messageInfo_RequestBusinessCardID.Size(m)
}
func (m *RequestBusinessCardID) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBusinessCardID.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBusinessCardID proto.InternalMessageInfo

func (m *RequestBusinessCardID) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *RequestBusinessCardID) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *RequestBusinessCardID) GetPersonWithId() string {
	if m != nil {
		return m.PersonWithId
	}
	return ""
}

func (m *RequestBusinessCardID) GetCardIdStatus() VerifiedStatus {
	if m != nil {
		return m.CardIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *RequestBusinessCardID) GetBussinessId() string {
	if m != nil {
		return m.BussinessId
	}
	return ""
}

func (m *RequestBusinessCardID) GetBussinessIdStatus() VerifiedStatus {
	if m != nil {
		return m.BussinessIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *RequestBusinessCardID) GetRejectionMessage() string {
	if m != nil {
		return m.RejectionMessage
	}
	return ""
}

func (m *RequestBusinessCardID) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *RequestBusinessCardID) GetVerifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.VerifiedAt
	}
	return nil
}

func (m *RequestBusinessCardID) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ResponseBusinessCardID struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Data                 *TourHost `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponseBusinessCardID) Reset()         { *m = ResponseBusinessCardID{} }
func (m *ResponseBusinessCardID) String() string { return proto.CompactTextString(m) }
func (*ResponseBusinessCardID) ProtoMessage()    {}
func (*ResponseBusinessCardID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{21}
}

func (m *ResponseBusinessCardID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBusinessCardID.Unmarshal(m, b)
}
func (m *ResponseBusinessCardID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBusinessCardID.Marshal(b, m, deterministic)
}
func (m *ResponseBusinessCardID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBusinessCardID.Merge(m, src)
}
func (m *ResponseBusinessCardID) XXX_Size() int {
	return xxx_messageInfo_ResponseBusinessCardID.Size(m)
}
func (m *ResponseBusinessCardID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBusinessCardID.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBusinessCardID proto.InternalMessageInfo

func (m *ResponseBusinessCardID) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseBusinessCardID) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseBusinessCardID) GetData() *TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestAdministratorUpdateHost struct {
	UserUid              string               `protobuf:"bytes,1,opt,name=user_uid,json=userUid,proto3" json:"user_uid,omitempty"`
	BusinessName         string               `protobuf:"bytes,2,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessCategory     string               `protobuf:"bytes,3,opt,name=business_category,json=businessCategory,proto3" json:"business_category,omitempty"`
	Address              string               `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	BusinessAbout        string               `protobuf:"bytes,5,opt,name=business_about,json=businessAbout,proto3" json:"business_about,omitempty"`
	CardIdType           string               `protobuf:"bytes,6,opt,name=card_id_type,json=cardIdType,proto3" json:"card_id_type,omitempty"`
	CardId               string               `protobuf:"bytes,7,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	CardIdStatus         VerifiedStatus       `protobuf:"varint,8,opt,name=card_id_status,json=cardIdStatus,proto3,enum=host.VerifiedStatus" json:"card_id_status,omitempty"`
	PersonWithId         string               `protobuf:"bytes,9,opt,name=person_with_id,json=personWithId,proto3" json:"person_with_id,omitempty"`
	BussinessIdType      string               `protobuf:"bytes,10,opt,name=bussiness_id_type,json=bussinessIdType,proto3" json:"bussiness_id_type,omitempty"`
	BussinessId          string               `protobuf:"bytes,11,opt,name=bussiness_id,json=bussinessId,proto3" json:"bussiness_id,omitempty"`
	BussinessIdStatus    VerifiedStatus       `protobuf:"varint,12,opt,name=bussiness_id_status,json=bussinessIdStatus,proto3,enum=host.VerifiedStatus" json:"bussiness_id_status,omitempty"`
	IsVerified           bool                 `protobuf:"varint,13,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	ByAdmin              bool                 `protobuf:"varint,14,opt,name=by_admin,json=byAdmin,proto3" json:"by_admin,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestAdministratorUpdateHost) Reset()         { *m = RequestAdministratorUpdateHost{} }
func (m *RequestAdministratorUpdateHost) String() string { return proto.CompactTextString(m) }
func (*RequestAdministratorUpdateHost) ProtoMessage()    {}
func (*RequestAdministratorUpdateHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{22}
}

func (m *RequestAdministratorUpdateHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAdministratorUpdateHost.Unmarshal(m, b)
}
func (m *RequestAdministratorUpdateHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAdministratorUpdateHost.Marshal(b, m, deterministic)
}
func (m *RequestAdministratorUpdateHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAdministratorUpdateHost.Merge(m, src)
}
func (m *RequestAdministratorUpdateHost) XXX_Size() int {
	return xxx_messageInfo_RequestAdministratorUpdateHost.Size(m)
}
func (m *RequestAdministratorUpdateHost) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAdministratorUpdateHost.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAdministratorUpdateHost proto.InternalMessageInfo

func (m *RequestAdministratorUpdateHost) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBusinessCategory() string {
	if m != nil {
		return m.BusinessCategory
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBusinessAbout() string {
	if m != nil {
		return m.BusinessAbout
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetCardIdType() string {
	if m != nil {
		return m.CardIdType
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetCardIdStatus() VerifiedStatus {
	if m != nil {
		return m.CardIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *RequestAdministratorUpdateHost) GetPersonWithId() string {
	if m != nil {
		return m.PersonWithId
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBussinessIdType() string {
	if m != nil {
		return m.BussinessIdType
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBussinessId() string {
	if m != nil {
		return m.BussinessId
	}
	return ""
}

func (m *RequestAdministratorUpdateHost) GetBussinessIdStatus() VerifiedStatus {
	if m != nil {
		return m.BussinessIdStatus
	}
	return VerifiedStatus_PENDING
}

func (m *RequestAdministratorUpdateHost) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *RequestAdministratorUpdateHost) GetByAdmin() bool {
	if m != nil {
		return m.ByAdmin
	}
	return false
}

func (m *RequestAdministratorUpdateHost) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *RequestAdministratorUpdateHost) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ResponseAdministratorUpdateHost struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Data                 *TourHost `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponseAdministratorUpdateHost) Reset()         { *m = ResponseAdministratorUpdateHost{} }
func (m *ResponseAdministratorUpdateHost) String() string { return proto.CompactTextString(m) }
func (*ResponseAdministratorUpdateHost) ProtoMessage()    {}
func (*ResponseAdministratorUpdateHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d66b36cac05c6a8, []int{23}
}

func (m *ResponseAdministratorUpdateHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseAdministratorUpdateHost.Unmarshal(m, b)
}
func (m *ResponseAdministratorUpdateHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseAdministratorUpdateHost.Marshal(b, m, deterministic)
}
func (m *ResponseAdministratorUpdateHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseAdministratorUpdateHost.Merge(m, src)
}
func (m *ResponseAdministratorUpdateHost) XXX_Size() int {
	return xxx_messageInfo_ResponseAdministratorUpdateHost.Size(m)
}
func (m *ResponseAdministratorUpdateHost) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseAdministratorUpdateHost.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseAdministratorUpdateHost proto.InternalMessageInfo

func (m *ResponseAdministratorUpdateHost) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseAdministratorUpdateHost) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseAdministratorUpdateHost) GetData() *TourHost {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("host.VerifiedStatus", VerifiedStatus_name, VerifiedStatus_value)
	proto.RegisterType((*TourHost)(nil), "host.TourHost")
	proto.RegisterType((*UpdateTourHostRequest)(nil), "host.UpdateTourHostRequest")
	proto.RegisterType((*UpdateTourHostResponse)(nil), "host.UpdateTourHostResponse")
	proto.RegisterType((*HostCardID)(nil), "host.HostCardID")
	proto.RegisterType((*HostBussinessID)(nil), "host.HostBussinessID")
	proto.RegisterType((*ResponseMessage)(nil), "host.ResponseMessage")
	proto.RegisterType((*CreateTourHostRequest)(nil), "host.CreateTourHostRequest")
	proto.RegisterType((*CreateTourHostResponse)(nil), "host.CreateTourHostResponse")
	proto.RegisterType((*GetTourHostResponse)(nil), "host.GetTourHostResponse")
	proto.RegisterType((*GetTourHostByIDResponse)(nil), "host.GetTourHostByIDResponse")
	proto.RegisterType((*GetTourHostRequest)(nil), "host.GetTourHostRequest")
	proto.RegisterType((*GetTourHostRespone)(nil), "host.GetTourHostRespone")
	proto.RegisterType((*SignUpAsHostRequest)(nil), "host.SignUpAsHostRequest")
	proto.RegisterType((*SignUpAsHostResponse)(nil), "host.SignUpAsHostResponse")
	proto.RegisterType((*RequestParams)(nil), "host.RequestParams")
	proto.RegisterType((*Paginate)(nil), "host.Paginate")
	proto.RegisterType((*ResponseTourHostList)(nil), "host.ResponseTourHostList")
	proto.RegisterType((*RequestVerified)(nil), "host.RequestVerified")
	proto.RegisterType((*HostIDS)(nil), "host.HostIDS")
	proto.RegisterType((*ResponseVerified)(nil), "host.ResponseVerified")
	proto.RegisterType((*RequestBusinessCardID)(nil), "host.RequestBusinessCardID")
	proto.RegisterType((*ResponseBusinessCardID)(nil), "host.ResponseBusinessCardID")
	proto.RegisterType((*RequestAdministratorUpdateHost)(nil), "host.RequestAdministratorUpdateHost")
	proto.RegisterType((*ResponseAdministratorUpdateHost)(nil), "host.ResponseAdministratorUpdateHost")
}

func init() { proto.RegisterFile("pb/host.proto", fileDescriptor_7d66b36cac05c6a8) }

var fileDescriptor_7d66b36cac05c6a8 = []byte{
	// 2030 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcd, 0x6f, 0x23, 0x59,
	0x11, 0xc7, 0x71, 0xfc, 0x55, 0x76, 0x1c, 0xe7, 0xd9, 0xc9, 0x74, 0x9c, 0x4c, 0xe2, 0xf4, 0xcc,
	0xc0, 0x6c, 0xd8, 0x89, 0x59, 0xaf, 0xf8, 0xd8, 0x41, 0x20, 0x25, 0x4e, 0x34, 0x18, 0x41, 0xd6,
	0xf2, 0x4c, 0x76, 0x8f, 0x4d, 0xdb, 0xfd, 0x9c, 0x34, 0x6b, 0x77, 0x37, 0xdd, 0xcf, 0xb3, 0x58,
	0x68, 0x41, 0xe2, 0xc0, 0x79, 0x25, 0x6e, 0xc0, 0x5f, 0xc1, 0xff, 0xc0, 0x95, 0x0b, 0x37, 0x24,
	0x6e, 0x1c, 0x38, 0xf0, 0x47, 0xa0, 0xf7, 0xd5, 0xee, 0x2f, 0xdb, 0x6d, 0x58, 0xa4, 0xd5, 0xde,
	0xfc, 0xaa, 0xea, 0x75, 0xbd, 0xaa, 0x57, 0xf5, 0xab, 0x5f, 0xb7, 0x61, 0xc7, 0x19, 0xb6, 0x1f,
	0x6c, 0x8f, 0x5c, 0x38, 0xae, 0x4d, 0x6c, 0xb4, 0x4d, 0x7f, 0x37, 0x8f, 0xef, 0x6d, 0xfb, 0x7e,
	0x82, 0xdb, 0xba, 0x63, 0xb6, 0x75, 0xcb, 0xb2, 0x89, 0x4e, 0x4c, 0xdb, 0xf2, 0xb8, 0x4d, 0xf3,
	0x54, 0x68, 0xd9, 0x6a, 0x38, 0x1b, 0xb7, 0x89, 0x39, 0xc5, 0x1e, 0xd1, 0xa7, 0x0e, 0x37, 0x50,
	0xff, 0x52, 0x82, 0xe2, 0x1b, 0x7b, 0xe6, 0xfe, 0xc8, 0xf6, 0x08, 0x7a, 0x04, 0x05, 0xfa, 0x4c,
	0xcd, 0x34, 0x94, 0x4c, 0x2b, 0xf3, 0xbc, 0x34, 0xc8, 0xd3, 0x65, 0xcf, 0x40, 0x8f, 0x01, 0xc6,
	0xa6, 0xeb, 0x11, 0xcd, 0xd2, 0xa7, 0x58, 0xd9, 0x62, 0xba, 0x12, 0x93, 0xdc, 0xea, 0x53, 0x8c,
	0x8e, 0xa0, 0x34, 0xd1, 0xa5, 0x36, 0xcb, 0xb4, 0x45, 0x2a, 0x60, 0xca, 0x03, 0xc8, 0xdf, 0x63,
	0xcb, 0xc0, 0xae, 0xb2, 0xcd, 0x9f, 0xc9, 0x57, 0xe8, 0x0c, 0x2a, 0xce, 0x83, 0x6d, 0x61, 0xcd,
	0x9a, 0x4d, 0x87, 0xd8, 0x55, 0x72, 0x4c, 0x5b, 0x66, 0xb2, 0x5b, 0x26, 0x42, 0x3f, 0x84, 0x1d,
	0x43, 0x27, 0x58, 0xb3, 0xc7, 0xda, 0xd0, 0x74, 0xc9, 0x83, 0x92, 0x6f, 0x65, 0x9e, 0x97, 0x3b,
	0xcd, 0x0b, 0x1e, 0xd5, 0x85, 0x8c, 0xea, 0xe2, 0x8d, 0x8c, 0x6a, 0x50, 0xa6, 0x1b, 0x3e, 0x1c,
	0x5f, 0x51, 0x73, 0xd4, 0x84, 0xa2, 0xa3, 0x7b, 0xde, 0xa7, 0xb6, 0x6b, 0x28, 0x05, 0x7e, 0x2c,
	0xb9, 0x46, 0x17, 0x50, 0x77, 0x5c, 0x7b, 0x6c, 0x4e, 0xb0, 0xe6, 0x98, 0x23, 0x32, 0x73, 0xb1,
	0x36, 0x73, 0x27, 0x4a, 0x91, 0x99, 0xed, 0x09, 0x55, 0x9f, 0x6b, 0xee, 0xdc, 0x09, 0x7a, 0x02,
	0x3b, 0xc3, 0x99, 0x67, 0x5a, 0xd8, 0xf3, 0x78, 0x9c, 0x25, 0x66, 0x59, 0x91, 0x42, 0x16, 0xeb,
	0x37, 0x61, 0xcf, 0x37, 0x1a, 0xe9, 0x04, 0xdf, 0xdb, 0xee, 0x5c, 0x01, 0x66, 0x58, 0x93, 0x8a,
	0xae, 0x90, 0x23, 0x05, 0x0a, 0xba, 0x61, 0xb8, 0xd8, 0xf3, 0x94, 0x32, 0x33, 0x91, 0x4b, 0xf4,
	0x0c, 0xaa, 0xfe, 0x63, 0xf4, 0xa1, 0x3d, 0x23, 0x4a, 0x85, 0x19, 0xf8, 0x27, 0xb8, 0xa4, 0x42,
	0xd4, 0x82, 0xca, 0x48, 0x77, 0x0d, 0xcd, 0x34, 0x34, 0x32, 0x77, 0xb0, 0xb2, 0xc3, 0x8c, 0x80,
	0xca, 0x7a, 0xc6, 0x9b, 0xb9, 0x83, 0xe9, 0x85, 0x0a, 0x0b, 0xa5, 0xca, 0x93, 0xcf, 0x95, 0xe8,
	0x29, 0x54, 0x1d, 0xec, 0x7a, 0xb6, 0xa5, 0x7d, 0x6a, 0x92, 0x07, 0xaa, 0xdf, 0xe5, 0xe1, 0x70,
	0xe9, 0xc7, 0x26, 0x79, 0xe8, 0x19, 0xe8, 0x9c, 0x85, 0x23, 0x0e, 0x22, 0xbd, 0xd4, 0x98, 0xe1,
	0xae, 0xaf, 0x10, 0xae, 0xce, 0xa0, 0x12, 0xb4, 0x55, 0xf6, 0xf8, 0x75, 0x06, 0xcc, 0xd0, 0x29,
	0x94, 0x4d, 0x4f, 0x7b, 0x8b, 0x5d, 0x73, 0x6c, 0x62, 0x43, 0x41, 0xad, 0xcc, 0xf3, 0xe2, 0x00,
	0x4c, 0xef, 0x23, 0x21, 0xa1, 0x71, 0xeb, 0xa3, 0x91, 0x3d, 0xb3, 0x88, 0x2c, 0x8a, 0x3a, 0x8f,
	0x5b, 0x48, 0x45, 0x59, 0x28, 0x50, 0x18, 0xea, 0x13, 0xdd, 0x1a, 0x61, 0xa5, 0xc1, 0x13, 0x27,
	0x96, 0xe8, 0x10, 0x8a, 0x33, 0x0f, 0xbb, 0xda, 0xcc, 0x34, 0x94, 0x7d, 0xae, 0xa2, 0xeb, 0x3b,
	0xd3, 0x40, 0x0d, 0xc8, 0xe1, 0xa9, 0x6e, 0x4e, 0x94, 0x03, 0x26, 0xe7, 0x0b, 0x9a, 0x07, 0x99,
	0x42, 0x8f, 0xe8, 0x64, 0xe6, 0x29, 0x8f, 0x5a, 0x99, 0xe7, 0xb9, 0x41, 0x85, 0xe7, 0xe9, 0x35,
	0x93, 0xd1, 0x5a, 0x09, 0xe5, 0x41, 0x98, 0x2a, 0xcc, 0x74, 0x2f, 0x10, 0xa2, 0xb0, 0x3f, 0x85,
	0x32, 0x7b, 0xaa, 0x08, 0xe2, 0x70, 0x71, 0x2f, 0x22, 0x82, 0x77, 0xa0, 0xb6, 0x78, 0xa0, 0xb0,
	0x6a, 0x46, 0xf2, 0x2a, 0x4c, 0x5b, 0x50, 0xb6, 0x58, 0x4b, 0xeb, 0x13, 0x93, 0xcc, 0x95, 0x23,
	0x9e, 0xd6, 0x80, 0x88, 0x16, 0x9d, 0x8b, 0x7f, 0x8e, 0x47, 0x54, 0xa2, 0x4d, 0xb1, 0xe7, 0xe9,
	0xf7, 0x58, 0x39, 0xe6, 0x45, 0xe7, 0x2b, 0x7e, 0xca, 0xe5, 0xb4, 0x8c, 0x79, 0x82, 0x1d, 0x7d,
	0xf4, 0x09, 0x35, 0x7c, 0x2c, 0xe2, 0xa5, 0xc2, 0x3e, 0x97, 0xa1, 0x0f, 0x00, 0x66, 0x0e, 0x6d,
	0x24, 0x43, 0xd3, 0x89, 0x72, 0xb2, 0xb6, 0xe9, 0x4a, 0xc2, 0xfa, 0x92, 0xd0, 0xad, 0x23, 0x17,
	0xcb, 0xad, 0xa7, 0xeb, 0xb7, 0x0a, 0xeb, 0x4b, 0x82, 0xbe, 0x0f, 0x65, 0x59, 0x1b, 0x74, 0x6f,
	0x6b, 0xed, 0x5e, 0x90, 0xe6, 0x97, 0x44, 0xfd, 0x57, 0x0e, 0xf6, 0xef, 0xd8, 0x29, 0x24, 0x9a,
	0x0d, 0xf0, 0x2f, 0x66, 0xf8, 0xff, 0x05, 0x6a, 0x51, 0xf0, 0xda, 0x4e, 0x01, 0x5e, 0xb9, 0xcd,
	0xc0, 0xeb, 0x0c, 0x2a, 0xf6, 0xc4, 0xd0, 0x7c, 0x00, 0xcb, 0x73, 0x17, 0xf6, 0xc4, 0xe8, 0x4b,
	0x0c, 0x5b, 0x85, 0x6f, 0xef, 0xc3, 0xbe, 0xfc, 0xad, 0x8d, 0x6c, 0x6b, 0x6c, 0xba, 0x53, 0x56,
	0x33, 0x02, 0xe1, 0x1a, 0x52, 0xd9, 0x0d, 0xe8, 0x96, 0x81, 0x62, 0x29, 0x35, 0x28, 0x42, 0x5a,
	0x50, 0x2c, 0xaf, 0x07, 0xc5, 0xca, 0x3a, 0x50, 0xdc, 0x49, 0x02, 0xc5, 0x20, 0x04, 0x54, 0xc3,
	0x10, 0x10, 0x2e, 0xeb, 0xdd, 0x4d, 0xca, 0xda, 0x47, 0x8f, 0x5a, 0x10, 0x3d, 0x16, 0xa3, 0x6d,
	0x2f, 0x34, 0xda, 0x0e, 0xa1, 0x38, 0x9c, 0x6b, 0xba, 0x31, 0x35, 0x2d, 0x81, 0x72, 0x85, 0xe1,
	0xfc, 0x92, 0x2e, 0xa3, 0x18, 0x58, 0x8f, 0x61, 0x60, 0xa4, 0xdf, 0x1b, 0xb1, 0x7e, 0x57, 0x3d,
	0x38, 0x88, 0x56, 0xba, 0xe7, 0xd8, 0x96, 0x87, 0x51, 0x1b, 0xb6, 0x0d, 0x9d, 0xe8, 0xac, 0xce,
	0xcb, 0x9d, 0xa3, 0x0b, 0x46, 0x16, 0x12, 0xbb, 0x62, 0xc0, 0x0c, 0x11, 0x82, 0xed, 0x91, 0x6d,
	0xc8, 0xe2, 0x67, 0xbf, 0x69, 0xa8, 0xc4, 0x24, 0x13, 0x59, 0xf3, 0x7c, 0xa1, 0xfe, 0x23, 0x03,
	0x40, 0xf7, 0x77, 0x29, 0x2e, 0x5e, 0x2f, 0x6f, 0xaa, 0xc0, 0xc4, 0xd9, 0x5a, 0x33, 0x71, 0xb2,
	0x09, 0x13, 0xe7, 0x65, 0x0c, 0x8f, 0x69, 0x67, 0x55, 0x3b, 0x0d, 0x1e, 0x8b, 0xcc, 0x12, 0xc7,
	0xd9, 0x08, 0x4a, 0x47, 0xf0, 0x23, 0xb7, 0x11, 0x7e, 0xfc, 0x35, 0x03, 0xbb, 0x34, 0xbe, 0x2b,
	0x1f, 0xcc, 0x57, 0x04, 0x19, 0x9d, 0x75, 0x5b, 0xf1, 0x59, 0x77, 0x9d, 0x3c, 0x32, 0xb2, 0x2b,
	0xa2, 0x49, 0x18, 0x24, 0x61, 0x34, 0xdd, 0xde, 0x00, 0x4d, 0xd5, 0x2e, 0xec, 0xca, 0xba, 0x90,
	0xd8, 0x7f, 0x00, 0x79, 0x71, 0x0c, 0x11, 0x0e, 0x5f, 0xd1, 0x9e, 0x93, 0x63, 0x83, 0x47, 0x22,
	0x97, 0xea, 0xef, 0x8a, 0xb0, 0xdf, 0x65, 0x8f, 0xfc, 0xaa, 0xa0, 0x6a, 0x10, 0x32, 0xf3, 0x69,
	0x21, 0xb3, 0xb0, 0x02, 0x32, 0x63, 0x10, 0x58, 0x4c, 0x0b, 0x81, 0xa5, 0xf5, 0x10, 0x08, 0xeb,
	0x20, 0xb0, 0x9c, 0x86, 0x17, 0x56, 0x56, 0xf1, 0xc2, 0x9d, 0x35, 0x5d, 0x5a, 0x4d, 0xcb, 0x0b,
	0x77, 0xd3, 0xf1, 0xc2, 0xda, 0x5a, 0x5e, 0xb8, 0x97, 0x82, 0x17, 0xa2, 0x35, 0xbc, 0xb0, 0xbe,
	0x9c, 0x17, 0x36, 0x62, 0x43, 0x21, 0xd0, 0x62, 0xfb, 0x9b, 0x10, 0x96, 0x64, 0x4a, 0xb9, 0x18,
	0x0a, 0x8f, 0x96, 0x0e, 0x05, 0x25, 0x3c, 0x14, 0xe2, 0x2c, 0xf4, 0x30, 0x3d, 0x0b, 0x6d, 0xa6,
	0x64, 0xa1, 0x47, 0xa9, 0x58, 0xe8, 0x71, 0x22, 0x0b, 0xa5, 0x33, 0x27, 0x8a, 0x03, 0xab, 0x66,
	0x4e, 0x22, 0x66, 0x6c, 0x3c, 0x73, 0x3e, 0x80, 0xfa, 0x2b, 0x4c, 0x62, 0x1e, 0xd5, 0x90, 0xc7,
	0x2a, 0xf7, 0xe8, 0x5b, 0x31, 0x9d, 0xfa, 0x03, 0x78, 0x14, 0xd8, 0x7a, 0x35, 0xef, 0x5d, 0x6f,
	0xb4, 0xfd, 0x05, 0xa0, 0x90, 0xe7, 0xd5, 0x98, 0xa7, 0x7e, 0x2f, 0x62, 0x4e, 0x3d, 0xa5, 0x73,
	0xf4, 0xa7, 0x0c, 0xd4, 0x5f, 0x9b, 0xf7, 0xd6, 0x9d, 0x73, 0xe9, 0x05, 0x5d, 0x05, 0x0b, 0x36,
	0x13, 0x2e, 0xd8, 0x18, 0xe0, 0x6c, 0xa5, 0x05, 0x9c, 0xec, 0x7a, 0xc0, 0xd9, 0x0e, 0x01, 0x8e,
	0x6a, 0x43, 0x23, 0x7c, 0x3a, 0x91, 0xc3, 0x17, 0xa1, 0xd0, 0x0e, 0x79, 0x68, 0x09, 0x71, 0x6c,
	0x7c, 0xe5, 0xbf, 0x81, 0x1d, 0xb1, 0xb5, 0xaf, 0xbb, 0xfa, 0xd4, 0xa3, 0x5b, 0x1d, 0x3a, 0x98,
	0x78, 0x12, 0xd8, 0x6f, 0x9a, 0x1c, 0x07, 0xbb, 0x9a, 0x13, 0x18, 0x58, 0x0e, 0x76, 0xfb, 0x54,
	0xd5, 0x80, 0x9c, 0x43, 0x37, 0xca, 0xa7, 0xb2, 0x05, 0xaa, 0x41, 0xf6, 0x13, 0x3c, 0x17, 0xc1,
	0xd1, 0x9f, 0xf4, 0x2a, 0x3d, 0xdb, 0x25, 0xda, 0x70, 0x2e, 0xbe, 0x3b, 0xe4, 0xe9, 0xf2, 0x6a,
	0xae, 0xfe, 0x21, 0x03, 0xc5, 0xbe, 0x7e, 0x6f, 0x5a, 0x3a, 0x61, 0xd8, 0x35, 0x9a, 0xb9, 0x2e,
	0x66, 0xaf, 0x4b, 0xe2, 0x10, 0xb9, 0x41, 0x59, 0xc8, 0x98, 0xc3, 0x23, 0x28, 0x59, 0xf8, 0x97,
	0x64, 0x71, 0x98, 0xdc, 0xa0, 0x48, 0x05, 0x4c, 0xf9, 0x18, 0x80, 0xd8, 0x44, 0x9f, 0x70, 0x6d,
	0x96, 0x69, 0x4b, 0x4c, 0xd2, 0x8f, 0xc6, 0xb1, 0xcd, 0x94, 0xc1, 0x38, 0x98, 0x1d, 0x3b, 0x5d,
	0x6e, 0xc0, 0x17, 0xea, 0xe7, 0x19, 0x68, 0xc8, 0x3b, 0x90, 0x85, 0xf4, 0x13, 0xd3, 0x23, 0x7e,
	0x82, 0xf9, 0x01, 0x23, 0x09, 0xde, 0x0a, 0x24, 0xd8, 0x2f, 0xca, 0x6c, 0x2b, 0xbb, 0xac, 0x28,
	0xd1, 0x39, 0x9d, 0x91, 0x3c, 0x05, 0x82, 0x73, 0x08, 0x3b, 0x99, 0x98, 0x81, 0xaf, 0x57, 0xbf,
	0x43, 0x69, 0x06, 0xbb, 0x30, 0x1f, 0xad, 0x9f, 0x40, 0x8e, 0x5a, 0x53, 0x96, 0x41, 0x7d, 0xec,
	0xf0, 0xbd, 0xf4, 0xf9, 0xbd, 0xeb, 0xd7, 0x03, 0xae, 0x53, 0xbb, 0x50, 0x10, 0x92, 0xe5, 0x54,
	0x22, 0x32, 0x17, 0xb6, 0xa2, 0x73, 0x41, 0xfd, 0x19, 0xd4, 0x64, 0x3a, 0x7c, 0xef, 0x5f, 0x68,
	0x2a, 0xd4, 0xbf, 0x67, 0x61, 0x5f, 0xc4, 0x77, 0xe5, 0xb7, 0xcd, 0x97, 0x96, 0x01, 0x47, 0x67,
	0x6d, 0x2e, 0x35, 0x2f, 0xcd, 0x6f, 0xc6, 0x4b, 0x13, 0x3f, 0x39, 0x14, 0x96, 0x7c, 0x72, 0x88,
	0x5c, 0x63, 0x31, 0x36, 0xde, 0x23, 0xc4, 0xbd, 0xb4, 0x09, 0x71, 0x8f, 0xbc, 0xd4, 0xc1, 0x06,
	0x2f, 0x75, 0xea, 0x18, 0x0e, 0x64, 0xf9, 0x44, 0x2e, 0xf7, 0xbf, 0x29, 0xa2, 0xe5, 0x20, 0xff,
	0xe7, 0x1c, 0x9c, 0x88, 0x22, 0x62, 0xf3, 0xde, 0xf4, 0x88, 0xab, 0x13, 0xdb, 0xe5, 0x6f, 0x66,
	0xec, 0xcb, 0xeb, 0x97, 0x03, 0xef, 0x13, 0x08, 0x66, 0x2e, 0x0d, 0xc1, 0xcc, 0xaf, 0x22, 0x98,
	0x85, 0x50, 0x13, 0xc4, 0xcb, 0xbb, 0x98, 0xba, 0xbc, 0xe3, 0x0d, 0x54, 0x4a, 0x4b, 0x4e, 0x21,
	0x1d, 0x39, 0x2d, 0xa7, 0x6e, 0x98, 0xca, 0x66, 0x0d, 0x13, 0xe9, 0x81, 0x9d, 0x58, 0x0f, 0x04,
	0xd9, 0x61, 0x35, 0xcc, 0x0e, 0xff, 0x87, 0xcf, 0x16, 0x61, 0x72, 0x5b, 0xdb, 0xe4, 0xfd, 0xd1,
	0x86, 0x53, 0xd9, 0x1c, 0xcb, 0x8a, 0xf6, 0x0b, 0xed, 0x92, 0xf3, 0x57, 0x50, 0x0d, 0xe7, 0x11,
	0x95, 0xa1, 0xd0, 0xbf, 0xb9, 0xbd, 0xee, 0xdd, 0xbe, 0xaa, 0x7d, 0x0d, 0x55, 0xa0, 0xf8, 0xe1,
	0xed, 0xe0, 0xe6, 0xa3, 0xde, 0xcd, 0xc7, 0xb5, 0x0c, 0x5d, 0x5d, 0x76, 0xbb, 0x37, 0xfd, 0x37,
	0x37, 0xd7, 0xb5, 0x2d, 0xba, 0x1a, 0xdc, 0xfc, 0xf8, 0xa6, 0x4b, 0x57, 0xd9, 0xce, 0xbf, 0x01,
	0x76, 0xe5, 0xb3, 0x5f, 0x63, 0xf7, 0xad, 0x39, 0xc2, 0xc8, 0x83, 0x6a, 0xf8, 0x3b, 0x08, 0x5a,
	0xf5, 0x75, 0xa4, 0x79, 0x9c, 0xac, 0xe4, 0xe9, 0x50, 0xbf, 0xfe, 0xdb, 0xbf, 0xfd, 0xf3, 0xf7,
	0x5b, 0xad, 0xce, 0x11, 0xfb, 0xd3, 0xe5, 0xed, 0x7b, 0x6d, 0x62, 0xcf, 0x5c, 0x36, 0xd6, 0xda,
	0xbf, 0x12, 0x33, 0xe1, 0xb3, 0x97, 0x99, 0x73, 0x84, 0x61, 0x37, 0x42, 0x42, 0x51, 0x24, 0xf4,
	0xe6, 0x63, 0xbe, 0x5e, 0xc2, 0x55, 0xd5, 0x27, 0xcc, 0xd3, 0x63, 0xb4, 0xca, 0x13, 0x32, 0xa1,
	0x1a, 0xe6, 0xdb, 0x68, 0x15, 0x0b, 0x97, 0xb1, 0x25, 0xd3, 0x79, 0xf5, 0x98, 0x79, 0x3c, 0x50,
	0xf7, 0x62, 0x1e, 0x69, 0x44, 0x36, 0xd4, 0x16, 0xf7, 0x2f, 0xb0, 0xb2, 0xb6, 0x98, 0xef, 0x5c,
	0xd2, 0xdc, 0xe7, 0x92, 0xc8, 0xe7, 0x07, 0xb5, 0xc3, 0x1e, 0xfd, 0x6e, 0xe7, 0x1b, 0xf1, 0x60,
	0x58, 0x63, 0xcc, 0x5f, 0xd0, 0x6e, 0x0f, 0xa7, 0xf0, 0xd7, 0xf2, 0xab, 0x6e, 0xf4, 0xdb, 0xcc,
	0xfe, 0xc2, 0x6b, 0x40, 0xbc, 0xcc, 0xf5, 0x77, 0x99, 0xeb, 0xf7, 0x3a, 0xef, 0x2e, 0x75, 0xed,
	0xb7, 0x6c, 0xd8, 0xff, 0x0d, 0x54, 0x82, 0xb4, 0x16, 0x2d, 0xa7, 0xba, 0xcd, 0x66, 0x92, 0x4a,
	0xf0, 0xe5, 0x61, 0xa8, 0x12, 0x7a, 0xd6, 0xd8, 0x8e, 0x55, 0xc2, 0x61, 0xac, 0x12, 0xfc, 0x3b,
	0x79, 0xca, 0x4e, 0x7f, 0x82, 0x8e, 0xe3, 0xa7, 0x17, 0x9f, 0x64, 0xdb, 0x53, 0x8c, 0x26, 0xd0,
	0x08, 0x95, 0xd1, 0x1d, 0x9d, 0x1f, 0x09, 0x25, 0xb7, 0xc2, 0xd1, 0x3b, 0xcc, 0xd1, 0x13, 0x74,
	0x16, 0x77, 0x74, 0x8f, 0x69, 0xcd, 0xc9, 0x19, 0xf5, 0x19, 0xb2, 0xa1, 0x2e, 0xbb, 0x95, 0xbb,
	0xe3, 0x58, 0xe5, 0xe7, 0x3f, 0x44, 0x09, 0x9b, 0x07, 0xe1, 0x6b, 0xf1, 0x09, 0x9c, 0x70, 0xd8,
	0x39, 0x89, 0x39, 0x7c, 0xc1, 0xb1, 0x72, 0xc4, 0x3e, 0xb2, 0xd0, 0x9b, 0x18, 0x43, 0x9d, 0x52,
	0xdd, 0x45, 0x7c, 0xdc, 0x61, 0x3d, 0xe4, 0x90, 0xbf, 0x34, 0xc8, 0xab, 0x48, 0xa2, 0xca, 0xea,
	0x09, 0x73, 0xa9, 0xa0, 0x83, 0xb8, 0xcb, 0x09, 0xa5, 0xd2, 0x9f, 0x67, 0xe0, 0x8c, 0x97, 0x1c,
	0x47, 0x21, 0x5a, 0xd3, 0x92, 0x1d, 0xf4, 0xae, 0xa5, 0xdb, 0xa3, 0x90, 0xdb, 0x30, 0x7b, 0x90,
	0x1d, 0x96, 0xcc, 0x2d, 0xd4, 0x6f, 0xb1, 0x03, 0x9c, 0x77, 0x9e, 0x2d, 0xa9, 0x45, 0x11, 0x73,
	0x9b, 0x0f, 0x1a, 0x1a, 0xfa, 0x1f, 0x33, 0xd1, 0xff, 0x36, 0xe4, 0x31, 0x9e, 0x86, 0x8e, 0xb1,
	0x04, 0xa7, 0x9b, 0xcf, 0xc2, 0xe7, 0x59, 0x62, 0xa6, 0x7e, 0x9b, 0x1d, 0xac, 0xdd, 0x39, 0x4f,
	0x00, 0x1b, 0xff, 0xe2, 0xdb, 0x7a, 0x70, 0xf7, 0xcb, 0xcc, 0xf9, 0x30, 0xcf, 0xe6, 0xc8, 0xfb,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x42, 0xcf, 0xcb, 0xf4, 0x9e, 0x1e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TourHostServiceClient is the client API for TourHostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TourHostServiceClient interface {
	UpdateTourHost(ctx context.Context, in *UpdateTourHostRequest, opts ...grpc.CallOption) (*UpdateTourHostResponse, error)
	GetTourHostByID(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostByIDResponse, error)
	CreateTourHost(ctx context.Context, in *CreateTourHostRequest, opts ...grpc.CallOption) (*CreateTourHostResponse, error)
	UpdateHostCardID(ctx context.Context, in *HostCardID, opts ...grpc.CallOption) (*ResponseMessage, error)
	UpdateHostBussinessID(ctx context.Context, in *HostBussinessID, opts ...grpc.CallOption) (*ResponseMessage, error)
	// this endpoint only use for handling to sign up guest as host
	SignUpAsHost(ctx context.Context, in *SignUpAsHostRequest, opts ...grpc.CallOption) (*SignUpAsHostResponse, error)
	GetTourHostInfo(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostResponse, error)
	GetTourHostByUserUID(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostResponse, error)
	VerifiedHostByAdmin(ctx context.Context, in *RequestVerified, opts ...grpc.CallOption) (*ResponseVerified, error)
	ListTourHostByAdmin(ctx context.Context, in *RequestParams, opts ...grpc.CallOption) (*ResponseTourHostList, error)
	UpdateStatusCardBusinessIDByAdmin(ctx context.Context, in *RequestBusinessCardID, opts ...grpc.CallOption) (*ResponseBusinessCardID, error)
	UpdateTourHostByAdmin(ctx context.Context, in *RequestAdministratorUpdateHost, opts ...grpc.CallOption) (*ResponseAdministratorUpdateHost, error)
}

type tourHostServiceClient struct {
	cc *grpc.ClientConn
}

func NewTourHostServiceClient(cc *grpc.ClientConn) TourHostServiceClient {
	return &tourHostServiceClient{cc}
}

func (c *tourHostServiceClient) UpdateTourHost(ctx context.Context, in *UpdateTourHostRequest, opts ...grpc.CallOption) (*UpdateTourHostResponse, error) {
	out := new(UpdateTourHostResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/UpdateTourHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) GetTourHostByID(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostByIDResponse, error) {
	out := new(GetTourHostByIDResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/GetTourHostByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) CreateTourHost(ctx context.Context, in *CreateTourHostRequest, opts ...grpc.CallOption) (*CreateTourHostResponse, error) {
	out := new(CreateTourHostResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/CreateTourHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) UpdateHostCardID(ctx context.Context, in *HostCardID, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := c.cc.Invoke(ctx, "/host.TourHostService/UpdateHostCardID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) UpdateHostBussinessID(ctx context.Context, in *HostBussinessID, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := c.cc.Invoke(ctx, "/host.TourHostService/UpdateHostBussinessID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) SignUpAsHost(ctx context.Context, in *SignUpAsHostRequest, opts ...grpc.CallOption) (*SignUpAsHostResponse, error) {
	out := new(SignUpAsHostResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/SignUpAsHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) GetTourHostInfo(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostResponse, error) {
	out := new(GetTourHostResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/GetTourHostInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) GetTourHostByUserUID(ctx context.Context, in *TourHost, opts ...grpc.CallOption) (*GetTourHostResponse, error) {
	out := new(GetTourHostResponse)
	err := c.cc.Invoke(ctx, "/host.TourHostService/GetTourHostByUserUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) VerifiedHostByAdmin(ctx context.Context, in *RequestVerified, opts ...grpc.CallOption) (*ResponseVerified, error) {
	out := new(ResponseVerified)
	err := c.cc.Invoke(ctx, "/host.TourHostService/VerifiedHostByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) ListTourHostByAdmin(ctx context.Context, in *RequestParams, opts ...grpc.CallOption) (*ResponseTourHostList, error) {
	out := new(ResponseTourHostList)
	err := c.cc.Invoke(ctx, "/host.TourHostService/ListTourHostByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) UpdateStatusCardBusinessIDByAdmin(ctx context.Context, in *RequestBusinessCardID, opts ...grpc.CallOption) (*ResponseBusinessCardID, error) {
	out := new(ResponseBusinessCardID)
	err := c.cc.Invoke(ctx, "/host.TourHostService/UpdateStatusCardBusinessIDByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tourHostServiceClient) UpdateTourHostByAdmin(ctx context.Context, in *RequestAdministratorUpdateHost, opts ...grpc.CallOption) (*ResponseAdministratorUpdateHost, error) {
	out := new(ResponseAdministratorUpdateHost)
	err := c.cc.Invoke(ctx, "/host.TourHostService/UpdateTourHostByAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TourHostServiceServer is the server API for TourHostService service.
type TourHostServiceServer interface {
	UpdateTourHost(context.Context, *UpdateTourHostRequest) (*UpdateTourHostResponse, error)
	GetTourHostByID(context.Context, *TourHost) (*GetTourHostByIDResponse, error)
	CreateTourHost(context.Context, *CreateTourHostRequest) (*CreateTourHostResponse, error)
	UpdateHostCardID(context.Context, *HostCardID) (*ResponseMessage, error)
	UpdateHostBussinessID(context.Context, *HostBussinessID) (*ResponseMessage, error)
	// this endpoint only use for handling to sign up guest as host
	SignUpAsHost(context.Context, *SignUpAsHostRequest) (*SignUpAsHostResponse, error)
	GetTourHostInfo(context.Context, *TourHost) (*GetTourHostResponse, error)
	GetTourHostByUserUID(context.Context, *TourHost) (*GetTourHostResponse, error)
	VerifiedHostByAdmin(context.Context, *RequestVerified) (*ResponseVerified, error)
	ListTourHostByAdmin(context.Context, *RequestParams) (*ResponseTourHostList, error)
	UpdateStatusCardBusinessIDByAdmin(context.Context, *RequestBusinessCardID) (*ResponseBusinessCardID, error)
	UpdateTourHostByAdmin(context.Context, *RequestAdministratorUpdateHost) (*ResponseAdministratorUpdateHost, error)
}

// UnimplementedTourHostServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTourHostServiceServer struct {
}

func (*UnimplementedTourHostServiceServer) UpdateTourHost(ctx context.Context, req *UpdateTourHostRequest) (*UpdateTourHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTourHost not implemented")
}
func (*UnimplementedTourHostServiceServer) GetTourHostByID(ctx context.Context, req *TourHost) (*GetTourHostByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTourHostByID not implemented")
}
func (*UnimplementedTourHostServiceServer) CreateTourHost(ctx context.Context, req *CreateTourHostRequest) (*CreateTourHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTourHost not implemented")
}
func (*UnimplementedTourHostServiceServer) UpdateHostCardID(ctx context.Context, req *HostCardID) (*ResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHostCardID not implemented")
}
func (*UnimplementedTourHostServiceServer) UpdateHostBussinessID(ctx context.Context, req *HostBussinessID) (*ResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHostBussinessID not implemented")
}
func (*UnimplementedTourHostServiceServer) SignUpAsHost(ctx context.Context, req *SignUpAsHostRequest) (*SignUpAsHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUpAsHost not implemented")
}
func (*UnimplementedTourHostServiceServer) GetTourHostInfo(ctx context.Context, req *TourHost) (*GetTourHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTourHostInfo not implemented")
}
func (*UnimplementedTourHostServiceServer) GetTourHostByUserUID(ctx context.Context, req *TourHost) (*GetTourHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTourHostByUserUID not implemented")
}
func (*UnimplementedTourHostServiceServer) VerifiedHostByAdmin(ctx context.Context, req *RequestVerified) (*ResponseVerified, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifiedHostByAdmin not implemented")
}
func (*UnimplementedTourHostServiceServer) ListTourHostByAdmin(ctx context.Context, req *RequestParams) (*ResponseTourHostList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTourHostByAdmin not implemented")
}
func (*UnimplementedTourHostServiceServer) UpdateStatusCardBusinessIDByAdmin(ctx context.Context, req *RequestBusinessCardID) (*ResponseBusinessCardID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatusCardBusinessIDByAdmin not implemented")
}
func (*UnimplementedTourHostServiceServer) UpdateTourHostByAdmin(ctx context.Context, req *RequestAdministratorUpdateHost) (*ResponseAdministratorUpdateHost, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTourHostByAdmin not implemented")
}

func RegisterTourHostServiceServer(s *grpc.Server, srv TourHostServiceServer) {
	s.RegisterService(&_TourHostService_serviceDesc, srv)
}

func _TourHostService_UpdateTourHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTourHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).UpdateTourHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/UpdateTourHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).UpdateTourHost(ctx, req.(*UpdateTourHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_GetTourHostByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TourHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).GetTourHostByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/GetTourHostByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).GetTourHostByID(ctx, req.(*TourHost))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_CreateTourHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTourHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).CreateTourHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/CreateTourHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).CreateTourHost(ctx, req.(*CreateTourHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_UpdateHostCardID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostCardID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).UpdateHostCardID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/UpdateHostCardID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).UpdateHostCardID(ctx, req.(*HostCardID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_UpdateHostBussinessID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostBussinessID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).UpdateHostBussinessID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/UpdateHostBussinessID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).UpdateHostBussinessID(ctx, req.(*HostBussinessID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_SignUpAsHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpAsHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).SignUpAsHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/SignUpAsHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).SignUpAsHost(ctx, req.(*SignUpAsHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_GetTourHostInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TourHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).GetTourHostInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/GetTourHostInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).GetTourHostInfo(ctx, req.(*TourHost))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_GetTourHostByUserUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TourHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).GetTourHostByUserUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/GetTourHostByUserUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).GetTourHostByUserUID(ctx, req.(*TourHost))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_VerifiedHostByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).VerifiedHostByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/VerifiedHostByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).VerifiedHostByAdmin(ctx, req.(*RequestVerified))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_ListTourHostByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).ListTourHostByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/ListTourHostByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).ListTourHostByAdmin(ctx, req.(*RequestParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_UpdateStatusCardBusinessIDByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBusinessCardID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).UpdateStatusCardBusinessIDByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/UpdateStatusCardBusinessIDByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).UpdateStatusCardBusinessIDByAdmin(ctx, req.(*RequestBusinessCardID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TourHostService_UpdateTourHostByAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAdministratorUpdateHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TourHostServiceServer).UpdateTourHostByAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/host.TourHostService/UpdateTourHostByAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TourHostServiceServer).UpdateTourHostByAdmin(ctx, req.(*RequestAdministratorUpdateHost))
	}
	return interceptor(ctx, in, info, handler)
}

var _TourHostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "host.TourHostService",
	HandlerType: (*TourHostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateTourHost",
			Handler:    _TourHostService_UpdateTourHost_Handler,
		},
		{
			MethodName: "GetTourHostByID",
			Handler:    _TourHostService_GetTourHostByID_Handler,
		},
		{
			MethodName: "CreateTourHost",
			Handler:    _TourHostService_CreateTourHost_Handler,
		},
		{
			MethodName: "UpdateHostCardID",
			Handler:    _TourHostService_UpdateHostCardID_Handler,
		},
		{
			MethodName: "UpdateHostBussinessID",
			Handler:    _TourHostService_UpdateHostBussinessID_Handler,
		},
		{
			MethodName: "SignUpAsHost",
			Handler:    _TourHostService_SignUpAsHost_Handler,
		},
		{
			MethodName: "GetTourHostInfo",
			Handler:    _TourHostService_GetTourHostInfo_Handler,
		},
		{
			MethodName: "GetTourHostByUserUID",
			Handler:    _TourHostService_GetTourHostByUserUID_Handler,
		},
		{
			MethodName: "VerifiedHostByAdmin",
			Handler:    _TourHostService_VerifiedHostByAdmin_Handler,
		},
		{
			MethodName: "ListTourHostByAdmin",
			Handler:    _TourHostService_ListTourHostByAdmin_Handler,
		},
		{
			MethodName: "UpdateStatusCardBusinessIDByAdmin",
			Handler:    _TourHostService_UpdateStatusCardBusinessIDByAdmin_Handler,
		},
		{
			MethodName: "UpdateTourHostByAdmin",
			Handler:    _TourHostService_UpdateTourHostByAdmin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/host.proto",
}
