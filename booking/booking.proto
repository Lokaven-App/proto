syntax = "proto3";
package booking;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

message Booking{
  string order_id = 1 ;
  string order_number = 2;
  string invoice_number = 3;
  string user_uid = 4 ;
  string tour_id = 5 ;
  string title = 6 ;
  repeated PackageSchedule schedules = 7;
  repeated PackageAddon addons = 8;
  repeated PackagePrice prices = 9;
  AdditionalCost additional_cost = 10;
  string qty_adults = 11 ;
  string qty_kids = 12;
  ContactInfo contact_info = 13;
  repeated Participant participants = 14;
  string sub_price_participants = 15 ;
  string total_price = 16;
  string status = 17;
  string host_id = 18;
  google.protobuf.Timestamp created_at = 19;
  google.protobuf.Timestamp end_date = 20;
  string type_tour = 21;
  string receipt_number = 22;
  string total_paid_price = 23;
  string sub_price_addons = 24;  
  string location = 25;
  string reason = 26;
  google.protobuf.Timestamp payment_date = 27;
  google.protobuf.Timestamp cancel_at = 28;
  bool badge = 29;
  bool is_refund = 30;
  bool is_reviewed = 31;
}

message DetailBookingHost {
  string order_id = 1;
  string invoice_number = 2;
  string user_uid = 3;
  string tour_id = 4;
  string host_id = 5;
  string title = 6;
  google.protobuf.Timestamp end_date = 7;
  google.protobuf.Timestamp start_date = 8;
  string durations = 9;
  string location = 10;
  repeated PackageMedia medias = 11;
  UserInfo user_info = 12;
  string qty_adults = 13;
  string qty_kids = 14;
  AdditionalCost additional_cost = 15;
  string total_paid_price = 16;
  google.protobuf.Int32Value min_quota = 17;
  google.protobuf.Timestamp remaining_time = 18;
  google.protobuf.Timestamp payment_date = 19;
  string reason = 20;
  string status = 21;
  google.protobuf.BoolValue show_link = 22;
}

message DetailBookingGuest {
  string order_id = 1;
  string order_number = 2;
  string invoice_number = 3;
  string title = 4;
  google.protobuf.Timestamp end_date = 5;
  google.protobuf.Timestamp start_date = 6;
  string host_name = 7;
  string user_uid = 8;
  string status = 9;
  repeated PackageMedia medias = 10;
  repeated PackageAddon addons = 12;
  repeated PackagePrice prices = 13;
  AdditionalCost additional_cost = 14;
  string qty_adults = 15;
  string qty_kids = 16;
  ContactInfo contact_info = 17;
  repeated Participant participants = 18;
  string sub_price_participants = 19 ;
  string total_price = 20;
  string host_id = 21;
  google.protobuf.Timestamp created_at = 22;
  string type_tour = 24;
  string receipt_number = 25;
  string total_paid_price = 26;
  string sub_price_addons = 27;  
  string location = 28;
  string reason = 29;
  google.protobuf.Timestamp payment_date = 30;
  google.protobuf.Timestamp cancel_at = 31;
  bool badge = 32;
  bool is_refund = 33;
  bool is_reviewed = 34;
}

message UserInfo {
  string name = 1;
  string email = 2;
  string phone = 3;
  string image = 4;
  string age = 5;
}

message TourPackage{
  string tour_id = 1;
  string title = 2;
  repeated PackageMedia medias = 3;
  repeated PackageSchedule schedules = 4;
  string description = 5;
  repeated string categories = 7;
  repeated string tags = 8;
  string location = 9;
  string rate = 10;
  string review = 11;
  repeated PackageAddon addons = 12;
  bool is_curated = 13;
  bool is_featured = 14;
  bool is_refundable = 15;
  string host_id = 16;
  string type_tour = 17;
  repeated PackagePrice prices = 18;
  string terms_of_service = 19;
  repeated CustomPolicy custom_policies = 20;
  string age_restriction = 21;
  string cost_foreign_guest = 22;
  string itinerary = 23;
  string policy_title = 24;
  string policy = 25;
  AdditionalCost additional_cost = 26;
  google.protobuf.Timestamp created_at = 27;
}

message CustomPolicy{
  string policy_name = 1;
  string policy = 2;
  string tour_id = 3;
}

message BookingByContact{
  string order_by_contact_id = 1;
  string user_uid = 2 ;
  string tour_id = 3 ;
  string first_name = 4;
  string last_name = 5;
  string phone_number = 6;
  string email = 7;
  int32 number_of_participant = 8;
  string status = 9;
  string host_id = 10;
  google.protobuf.Timestamp created_at = 11;
}

message ListBooking {
  string order_id = 1;
  string order_number =2;
  repeated PackageMedia medias = 3;
  string title = 4;
  string location = 5;
  google.protobuf.Timestamp start_date = 6;
  google.protobuf.Timestamp end_date = 7;
  string host_name = 8;
  string type_tour = 9;
  string status = 10;
  string tour_status = 11;
  string quota_left= 12;
  string awaiting=13;
  string ongoing=14;
  google.protobuf.Timestamp end_payment_date = 15;
  google.protobuf.Timestamp payment_date = 16;
  google.protobuf.Timestamp cancel_at = 17;
  google.protobuf.Timestamp created_at = 18;
  string schedule_id = 19;
  string reason = 20;
}

message RequestCancelTourHost {
  bool cancel = 1;
  string schedule_id = 2;
  string host_id = 3;
}

message ResponseCancelTourHost {
  int32 code = 1;
  string title = 2;
}

message ListIncomingBooking{
  string order_id = 1;
  string tour_id = 2;
  repeated PackageMedia medias = 3;
  string title = 4;
  string location = 5;
  string schedule_id = 6 ;
  google.protobuf.Timestamp start_date = 7;
  google.protobuf.Timestamp end_date = 8;
  string host_name = 9;
  string type_tour = 10;
  string status = 11;
  string tour_status = 12;
  bool badge = 13;
  string total_participants = 14;
  string total_books = 15;
  string quota_left= 16;
  string awaiting=17;
  string ongoing=18;
  bool ask_host=19;
}

message ListScheduleHost {
  string order_id = 1;
  string first_name = 2;
  string last_name = 3;
  string avatar = 4;
  google.protobuf.Timestamp created_at = 5;
  string status = 6;
  int32 total_participant = 7;
  string total_paid_price = 8;
  google.protobuf.Timestamp remaining_time = 9;
  google.protobuf.Timestamp payment_date = 10;
  string reason = 11;
}

message ResponseListScheduleHost {
  int32 code = 1;
  string title = 2;
  repeated ListScheduleHost data = 3;
  Paginate paginate = 4;
}

message ResponseListBooking {
  int32 code = 1;
  string title = 2;
  repeated ListBooking data = 3;
  Paginate paginate = 4;
}

message ResponseIncomingBookingList {
  int32 code = 1;
  string title = 2;
  repeated ListIncomingBooking data = 3;
  Paginate paginate = 4;
}

message RequestParams {
  string page = 1;
  string per_page = 2;
  string param = 3;
  string schedule_id = 4;
  string host_id = 5;
  string type_tour = 6;
}

message RequestParamsIncomingList{
  string page = 1;
  string per_page = 2;
  string param = 3;
  string schedule_id = 4;
  string key = 5;
  string host_id = 6;
}

message Paginate {
  int32 current_page = 1;
  int32 next_page = 2;
  int32 total_page = 3;
  int32 per_page = 4;
  int32 total = 5;
}

message BookingByContactResponse{
  int32 code = 1;
  string title = 2;
  repeated TourPackage tour_recommendation = 3 ;
  BookingByContact data = 4;
}

message BookingResponse{
  int32 code = 1;
  string title = 2;
  Booking data = 3;
}

message PackageSchedule{
  string schedule_id = 1;
  string tour_id = 2;
  string durations = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
  string quota = 6;
  bool is_active = 7;
  string min_quota = 8;
  string max_quota = 9;
  bool is_booked = 10;
  string order_number = 11;
  string tour_status = 12;
}

message PackageMedia{
  string media_id = 1;
  string url = 2;
  string type = 3 ;
  string tour_id = 4;
}

message PackageAddon{
  string addon_id = 1;
  string addon = 2;
  string price = 3;
  string tour_id = 4;
  string order_number = 5;
}

message PackagePrice{
  string price_id = 1;
  string tour_id = 2;
  string min_participant = 3;
  string max_participant = 4;
  string price = 5;
  string kid_price = 7;
  string min_kid_age = 8;
  string max_kid_age = 9;
  string order_number = 10;
}

message ContactInfo{
  string first_name = 2 ;
  string last_name = 3 ;
  string phone_number = 4;
  string email = 5;
}

message Participant{
  string order_number = 1;
  string first_name = 2 ;
  string last_name = 3 ;
  string phone_number = 4;
  string email = 5;
  string age = 6;
  bool as_contact_info = 7 ;
}

message ParticipantList {
  string order_number = 1;
  repeated Participant participants = 2;
}

message RequestParticipantQty{
  string order_number = 1 ;
  string qty_adults = 2 ;
  string qty_kids = 3 ;
  string sub_price_participants = 4 ;
  string price_id = 5;
  string tour_id = 6;
  string min_participant = 7;
  string max_participant = 8;
  string price = 9;
  string kid_price = 10;
  string min_kid_age = 11;
  string max_kid_age = 12;
}

message ResponseParticipantQty {
  RequestParticipantQty data = 1;
  int32 code = 2;
  string title = 3;
}

message ResponseGetPackageScheduleList{
  repeated PackageSchedule data = 1;
}

message ResponseDetailHostBooking{
  int32 code = 1;
  string title = 2;
  DetailBookingHost data = 3;
}

message ResponseDetailGuestBooking{
  int32 code = 1;
  string title = 2;
  DetailBookingGuest data = 3;
}

message ResponseParticipantsList {
  int32 code = 1;
  string title = 2;
  repeated Participant data = 3;
}

message ResponseGetAddonlist {
  repeated PackageAddon data = 1;
  int32 code = 2;
  string title = 3;
}

message ResponseGetPricelist {
  repeated PackagePrice data = 1;
  int32 code = 2;
  string title = 3;
}

message RequestDetailPriceByParticipant {
  string price_id = 1;
  string tour_id = 2;
  string min_participant = 3;
  string max_participant = 4;
  string price = 5;
  string kid_price = 7;
  string min_kid_age = 8;
  string max_kid_age = 9;
  string adult_participant = 10;
  string kid_participant = 11;
}

message ResponseDetailPriceByParticipant {
  string price_id = 1;
  string tour_id = 2;
  string min_participant = 3;
  string max_participant = 4;
  string price = 5;
  string kid_price = 7;
  string min_kid_age = 8;
  string max_kid_age = 9;
  string adult_participant = 10;
  string kid_participant = 11;
  string total_participant = 12;
  string total_adult_price = 13;
  string total_kid_price = 14;
  string total_price_participant = 15;
}

message ReceiptBooking{
  string order_id = 1 ;
  string order_number = 2;
  string invoice_number = 3;
  string user_uid = 4 ;
  string tour_id = 5 ;
  string title = 6 ;
  repeated PackageMedia medias= 7;
  repeated PackageSchedule schedules = 8;
  repeated PackageAddon addons = 9;
  repeated PackagePrice prices = 10;
  AdditionalCost additional_cost = 11;
  string qty_adults = 12;
  string qty_kids = 13;
  ContactInfo contact_info = 14;
  repeated Participant participants = 15;
  string sub_price_participants = 16 ;
  string total_price = 17;
  string status = 18;
  string host_id = 19;
  google.protobuf.Timestamp created_at = 20;
  google.protobuf.Timestamp end_date = 21;
  string type_tour = 22;
  string receipt_number = 23;
  string total_paid_price = 24;
  string sub_price_addons = 25;
  string location = 26;
  string total_quota = 27;
  string min_quota = 28;
  string max_quota = 29;
  string quota_left = 30;
  google.protobuf.Timestamp cancel_at = 31;
}

message ResponseReceiptBooking{
  int32 code = 1;
  string title = 2;
  ReceiptBooking data = 3;
}

message ActiveTour {
  string order_id = 1;
  string title = 2;
  repeated PackageMedia medias = 3;
  PackageSchedule schedules = 4;
  string location = 5;
  string description = 6;
  string itinerary = 7;  
  repeated PackageAddon addons = 8;
  int32 total_participant = 9;
  string tour_status = 10;
  UserInfo host = 12;
  repeated BroadcastMessage message = 13;
  google.protobuf.Timestamp ended_by_host = 14;
}

message BroadcastMessage {
  string message = 1;
  google.protobuf.Timestamp created_at = 2;
  UserInfo host = 3;
}

message ResponseActiveTour {
  int32 code = 1;
  string title = 2;
  google.protobuf.BoolValue review = 3;
  ActiveTour data = 4;
}

message TotalParticipants {
  int32 total = 1;
  string schedule_id = 2;
  string tour_id = 3;
  string status = 4;
}

message ResponseTotalParticipant {
  int32 code = 1;
  string title = 2;
  TotalParticipants data = 3;
}

message RequestParamsActiveList{
  string page = 1;
  string per_page = 2;
  string param = 4;
  string host_id = 5;
}

message ListActiveBooking{
  string order_id = 1;
  repeated PackageMedia medias = 2;
  string title = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
  string tour_status = 9;
  string total_participants = 11;
  string total_books = 12;
  string awaiting=13;
  string ongoing=14;
}

message ResponseActiveBookingList {
  int32 code = 1;
  string title = 2;
  repeated ListActiveBooking data = 3;
  Paginate paginate = 4;
}

message RequestParamsActivityList{
  string page = 1;
  string per_page = 2;
  string param = 4;
  string host_id = 5;
}

message ListActivityBooking{
  string order_id = 1;
  repeated PackageMedia medias = 2;
  string title = 3;
  string location = 4 ;
  string schedule_id = 5;
  google.protobuf.Timestamp start_date = 6;
  google.protobuf.Timestamp end_date = 7;
  string tour_status = 8;
  string total_participants = 9;
  string total_books = 10;
  string ongoing=11;
  string host_name=12;
  google.protobuf.Timestamp cancel_at = 13;
}

message ResponseBookingActivityList {
  int32 code = 1;
  string title = 2;
  repeated ListActivityBooking data = 3;
  Paginate paginate = 4;
}

message ParticipantHostRequest {
  string tour_id = 1;
  string schedule_id = 2;
  string page = 3;
  string per_page = 4;
}

message ParticipantHost {
  string user_uid = 1;
  UserInfo user_info = 2;
  repeated Participant participant = 3;
}

message ResponseParticipantHost {
  int32 code = 1;
  string title = 2;
  repeated ParticipantHost data = 3;
  Paginate paginate = 4;
}

message RequestInfoBookings {
  string schedule_id = 1;
  string tour_id = 2;
  string status = 3;
}

message ResponseListInfoBookings {
  int32 code =1;
  string title = 2;
  repeated Booking data = 3;
}

message GetBookingByTourScheduleID{
  repeated string order_numbers = 1;
  string tour_id = 2 ;
  string title = 3 ;
  repeated PackageSchedule schedules = 4;
  string qty_adults = 5 ;
  string qty_kids = 6;
  string host_id = 7;
  string type_tour = 8;
  string location = 9;
  string total_quota = 10;
  string min_quota = 11;
  string max_quota = 12;
  string quota_left = 13;
}

message ResponseGetBookingByTourScheduleID{
  int32 code = 1;
  string title = 2;
  GetBookingByTourScheduleID data = 3;
}

message StatusUpdateResponse {
  int32 code = 1;
  string title = 2;
  bool reopen = 3;
  repeated Participant participants = 4;
  string user_id = 5;
  string host_id = 6;
  string order_id = 7;
  string order_number = 8;
  repeated PackageSchedule schedules = 9;
  string tour_title = 10;
  string tour_id = 11;
}

message RequestBookingScheduleTourStatus {
  string order_number = 1 ;
  string tour_id = 2;
  string schedule_id = 3;
  string tour_status = 4 ;
}

message ResponseBookingScheduleTourStatus{
  Booking data = 1;
}

message ListBookingByAdmin {
  string order_id = 1;
  string order_number =2;
  UserInfo user_info = 3;
  ContactInfo contact_info = 4;
  repeated Participant participants = 5;
  repeated PackageMedia medias = 6;
  string title = 7;
  string location = 8;
  google.protobuf.Timestamp start_date = 9;
  google.protobuf.Timestamp end_date = 10;
  string host_name = 11;
  string type_tour = 12;
  string status = 13;
  string tour_status = 14;
  string quota_left= 15;
  string awaiting=16;
  string ongoing=17;
  string reason=18;
  google.protobuf.Timestamp end_payment_date = 19;
  google.protobuf.Timestamp payment_date = 20;
  google.protobuf.Timestamp cancel_at = 21;
  google.protobuf.Timestamp created_at = 22;
}

message RequestAdminParams {
  string page = 1;
  string per_page = 2;
  string param = 3;
}

message ResponseAdminListBooking {
  int32 code = 1;
  string title = 2;
  repeated ListBookingByAdmin data = 3;
  Paginate paginate = 4;
}

message AdditionalCost{
  string additional_adult_price = 1;
  string additional_kid_price = 2;
  string additional_adult_qty = 3;
  string additional_kid_qty = 4;
  string total_additional_price = 5;
}

service BookingRPC {

  rpc GetListBokings (RequestInfoBookings) returns (ResponseListInfoBookings); 
  
  rpc TotalParticipant (TotalParticipants) returns (ResponseTotalParticipant);

  rpc UpdateStatusBooking (Booking) returns (StatusUpdateResponse);

  rpc UpdateIsReviewed (Booking) returns (BookingResponse);

  rpc DetailBooking (Booking) returns (BookingResponse);

  rpc UpdateBookingScheduleTourStatus (RequestBookingScheduleTourStatus) returns (ResponseBookingScheduleTourStatus);

  rpc GetActivityTour (ActiveTour) returns (ResponseActiveTour) {
    option (google.api.http) = {
      get : "/api/v1/orders/activities/details/{order_id}",
    };
  }

  rpc CreateBooking (Booking) returns (BookingResponse) {
    option (google.api.http) = {
      post : "/api/v1/orders/users/{user_uid}/tourpackages/{tour_id}",
      body : "*"
    };
  }

  rpc DetailBookingByGuest (Booking) returns (ResponseDetailGuestBooking) {
    option (google.api.http) = {
      get : "/api/v1/orders/detail/{order_id}"
    };
  }

  rpc DetailBookingByHost (Booking) returns (ResponseDetailHostBooking) {
    option (google.api.http) = {
      get : "/api/v1/orders/detail/{order_id}/host/{host_id}"
    };
  }

  rpc CancelTourHost (RequestCancelTourHost) returns (ResponseCancelTourHost) {
    option (google.api.http) = {
      post : "/api/v1/orders/host/cancel",
      body : "*"
    };
  }

  rpc DetailParticipantsHost (ParticipantHostRequest) returns (ResponseParticipantHost) {
    option (google.api.http) = {
      get : "/api/v1/orders/detail/participant/host/{tour_id}/{schedule_id}"
    };
  }

  rpc DetailParticipants (Booking) returns (ResponseParticipantsList) {
    option (google.api.http) = {
      get : "/api/v1/orders/detail/participant/{order_id}"
    };
  }

  rpc ListBooking (RequestParams) returns (ResponseListBooking) {
    option (google.api.http) = {
      get : "/api/v1/orders/list",
    };
  }

  rpc ListScheduleHost (RequestParams) returns (ResponseListScheduleHost) {
    option (google.api.http) = {
      get : "/api/v1/orders/schedule/list/{schedule_id}/host/{host_id}",
    };
  }

  rpc CreateBookingByContact (BookingByContact) returns (BookingByContactResponse) {
    option (google.api.http) = {
      post : "/api/v1/orders/orders-by-contact/{user_uid}/tour-packages/{tour_id}",
      body : "*"
    };
  }

  rpc UpdateParticipantQty (RequestParticipantQty) returns (ResponseParticipantQty){
    option (google.api.http) = {
      patch : "/api/v1/orders/{order_number}/Participantqty",
      body : "*"
    };
  }

   rpc GetSchedulesList (PackageSchedule) returns (ResponseGetPackageScheduleList) {
    option (google.api.http) = {
      get : "/api/v1/orders/{order_number}/tourpackages/{tour_id}/schedules"
    };
  }

 rpc GetPriceslist(PackagePrice) returns (ResponseGetPricelist){
    option (google.api.http) = {
      get : "/api/v1/orders/{order_number}/tourpackages/{tour_id}/prices"
    };
  }

 rpc GetPriceByTotalParticipant (RequestDetailPriceByParticipant) returns(ResponseDetailPriceByParticipant){
    option (google.api.http) = {
      post : "/api/v1/orders/tourpackages/{tour_id}/prices-by-participant",
      body : "*"
    };
 }

  rpc GetAddonsList(PackageAddon) returns (ResponseGetAddonlist){
    option (google.api.http) = {
      get : "/api/v1/orders/{order_number}/tourpackages/{tour_id}/addons"
    };
  }

  rpc GetBookingReceipt(ReceiptBooking) returns(ResponseReceiptBooking){
   option (google.api.http) = {
      get : "/api/v1/orders/{order_number}/users"
    };
  }

  rpc GetIncomingBookingList (RequestParamsIncomingList) returns (ResponseIncomingBookingList) {
    option (google.api.http) = {
      get : "/api/v1/orders/incoming/list",
    };
  }

  rpc GetActiveBookingList (RequestParamsActiveList) returns (ResponseActiveBookingList) {
    option (google.api.http) = {
      get : "/api/v1/orders/active-list",
    };
  }

 rpc GetBookingActivitiyList (RequestParamsActivityList) returns (ResponseBookingActivityList) {
    option (google.api.http) = {
      get : "/api/v1/orders/activities-list",
    };
  }

  rpc GetBookingBySchedulesTourID (PackageSchedule) returns(ResponseGetBookingByTourScheduleID){
    option (google.api.http) = {
      get : "/api/v1/orders/tours/{tour_id}/schedules/{schedule_id}",
    };
  }

  rpc ListBookingByAdmin (RequestAdminParams) returns (ResponseAdminListBooking) {
    option (google.api.http) = {
      get : "/api/v1/orders/list-admin",
    };
  }

}