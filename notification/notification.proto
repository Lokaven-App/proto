syntax = "proto3";

package notification;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message Service {
    // @inject_tag: bson:"name"
    string name = 1;
    // @inject_tag: bson:"id"
    string id = 2;
}
message Body {
    // @inject_tag: bson:"message"
    string message = 1;
    // @inject_tag: bson:"sender"
    string sender = 2;
    // @inject_tag: bson:"properties"
    Properties properties = 3;
    // @inject_tag: bson:"time"
    string time = 4;
    // @inject_tag: bson:"status"
    string status = 5;
}

message Properties {
    // @inject_tag: bson:"user_id"
    string user_id = 1;
    // @inject_tag: bson:"tour_id"
    string tour_id = 2;
    // @inject_tag: bson:"schedule_id"
    string schedule_id = 3;
    // @inject_tag: bson:"order_number"
    string order_number = 4;
    // @inject_tag: bson:"host_id"
    string host_id = 5;
    // @inject_tag: bson:"type_tour"
    string type_tour = 6;
    // @inject_tag: bson:"order_id"
    string order_id = 7;

}

message Participants {
    // @inject_tag: bson:"user_id"
    string user_id = 1;
    // @inject_tag: bson:"device_id"
    string device_id = 2;
}

message Notification {
    // @inject_tag: bson:"service"
    Service service = 1;
    // @inject_tag: bson:"body"
    Body body = 2;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 3;
    // @inject_tag: bson:"participants"
    repeated Participants participants = 4;
}

message NotificationResponse {
    string title = 1;
    int32 code = 2;
    repeated Notification data = 3;
}

service NotificationService {

    rpc CreateNotification (Notification) returns (NotificationResponse) {
        option (google.api.http) = {
            post : "/api/v1/notification/create",
            body : "*"
        };
    }

    rpc GetNotification (Participants) returns (NotificationResponse) {
        option (google.api.http) = {
            get : "/api/v1/notification/get/{user_id}"
        };
    }
        
}