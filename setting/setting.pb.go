// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/setting.proto

package setting

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Setting struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Value                bool     `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{0}
}

func (m *Setting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setting.Unmarshal(m, b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return xxx_messageInfo_Setting.Size(m)
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Setting) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Setting) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type UserSetting struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Settings             []*Setting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserSetting) Reset()         { *m = UserSetting{} }
func (m *UserSetting) String() string { return proto.CompactTextString(m) }
func (*UserSetting) ProtoMessage()    {}
func (*UserSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{1}
}

func (m *UserSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSetting.Unmarshal(m, b)
}
func (m *UserSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSetting.Marshal(b, m, deterministic)
}
func (m *UserSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSetting.Merge(m, src)
}
func (m *UserSetting) XXX_Size() int {
	return xxx_messageInfo_UserSetting.Size(m)
}
func (m *UserSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSetting.DiscardUnknown(m)
}

var xxx_messageInfo_UserSetting proto.InternalMessageInfo

func (m *UserSetting) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserSetting) GetSettings() []*Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type UpdateUserSettingResponse struct {
	Data                 *UserSetting `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateUserSettingResponse) Reset()         { *m = UpdateUserSettingResponse{} }
func (m *UpdateUserSettingResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUserSettingResponse) ProtoMessage()    {}
func (*UpdateUserSettingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{2}
}

func (m *UpdateUserSettingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserSettingResponse.Unmarshal(m, b)
}
func (m *UpdateUserSettingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserSettingResponse.Marshal(b, m, deterministic)
}
func (m *UpdateUserSettingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserSettingResponse.Merge(m, src)
}
func (m *UpdateUserSettingResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateUserSettingResponse.Size(m)
}
func (m *UpdateUserSettingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserSettingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserSettingResponse proto.InternalMessageInfo

func (m *UpdateUserSettingResponse) GetData() *UserSetting {
	if m != nil {
		return m.Data
	}
	return nil
}

type HostSetting struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Settings             []*Setting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *HostSetting) Reset()         { *m = HostSetting{} }
func (m *HostSetting) String() string { return proto.CompactTextString(m) }
func (*HostSetting) ProtoMessage()    {}
func (*HostSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{3}
}

func (m *HostSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostSetting.Unmarshal(m, b)
}
func (m *HostSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostSetting.Marshal(b, m, deterministic)
}
func (m *HostSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostSetting.Merge(m, src)
}
func (m *HostSetting) XXX_Size() int {
	return xxx_messageInfo_HostSetting.Size(m)
}
func (m *HostSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_HostSetting.DiscardUnknown(m)
}

var xxx_messageInfo_HostSetting proto.InternalMessageInfo

func (m *HostSetting) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HostSetting) GetSettings() []*Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type UpdateHostSettingResponse struct {
	Data                 *HostSetting `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateHostSettingResponse) Reset()         { *m = UpdateHostSettingResponse{} }
func (m *UpdateHostSettingResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateHostSettingResponse) ProtoMessage()    {}
func (*UpdateHostSettingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{4}
}

func (m *UpdateHostSettingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHostSettingResponse.Unmarshal(m, b)
}
func (m *UpdateHostSettingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHostSettingResponse.Marshal(b, m, deterministic)
}
func (m *UpdateHostSettingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHostSettingResponse.Merge(m, src)
}
func (m *UpdateHostSettingResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateHostSettingResponse.Size(m)
}
func (m *UpdateHostSettingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHostSettingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHostSettingResponse proto.InternalMessageInfo

func (m *UpdateHostSettingResponse) GetData() *HostSetting {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateSettingRequest struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Settings             []*Setting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateSettingRequest) Reset()         { *m = CreateSettingRequest{} }
func (m *CreateSettingRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSettingRequest) ProtoMessage()    {}
func (*CreateSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{5}
}

func (m *CreateSettingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSettingRequest.Unmarshal(m, b)
}
func (m *CreateSettingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSettingRequest.Marshal(b, m, deterministic)
}
func (m *CreateSettingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSettingRequest.Merge(m, src)
}
func (m *CreateSettingRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSettingRequest.Size(m)
}
func (m *CreateSettingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSettingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSettingRequest proto.InternalMessageInfo

func (m *CreateSettingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateSettingRequest) GetSettings() []*Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type CreateSettingRespone struct {
	Data                 *CreateSettingRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateSettingRespone) Reset()         { *m = CreateSettingRespone{} }
func (m *CreateSettingRespone) String() string { return proto.CompactTextString(m) }
func (*CreateSettingRespone) ProtoMessage()    {}
func (*CreateSettingRespone) Descriptor() ([]byte, []int) {
	return fileDescriptor_21f1b67425477f43, []int{6}
}

func (m *CreateSettingRespone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSettingRespone.Unmarshal(m, b)
}
func (m *CreateSettingRespone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSettingRespone.Marshal(b, m, deterministic)
}
func (m *CreateSettingRespone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSettingRespone.Merge(m, src)
}
func (m *CreateSettingRespone) XXX_Size() int {
	return xxx_messageInfo_CreateSettingRespone.Size(m)
}
func (m *CreateSettingRespone) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSettingRespone.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSettingRespone proto.InternalMessageInfo

func (m *CreateSettingRespone) GetData() *CreateSettingRequest {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Setting)(nil), "setting.Setting")
	proto.RegisterType((*UserSetting)(nil), "setting.UserSetting")
	proto.RegisterType((*UpdateUserSettingResponse)(nil), "setting.UpdateUserSettingResponse")
	proto.RegisterType((*HostSetting)(nil), "setting.HostSetting")
	proto.RegisterType((*UpdateHostSettingResponse)(nil), "setting.UpdateHostSettingResponse")
	proto.RegisterType((*CreateSettingRequest)(nil), "setting.CreateSettingRequest")
	proto.RegisterType((*CreateSettingRespone)(nil), "setting.CreateSettingRespone")
}

func init() { proto.RegisterFile("pb/setting.proto", fileDescriptor_21f1b67425477f43) }

var fileDescriptor_21f1b67425477f43 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x6e, 0xda, 0x40,
	0x14, 0x85, 0x65, 0x43, 0x0b, 0xbd, 0x56, 0x11, 0x1d, 0xb1, 0x30, 0xd0, 0x4a, 0xae, 0x17, 0x95,
	0x55, 0x55, 0x58, 0xd0, 0x5d, 0xb7, 0x15, 0x6a, 0x11, 0xea, 0xc6, 0x94, 0x07, 0x18, 0xe2, 0x2b,
	0x67, 0x12, 0xe4, 0x71, 0x3c, 0x63, 0x24, 0x14, 0x65, 0x93, 0x45, 0x5e, 0x20, 0x8f, 0x96, 0x57,
	0xc8, 0x83, 0x44, 0x8c, 0x7f, 0x30, 0xb2, 0x49, 0x16, 0xb0, 0x9b, 0x9f, 0xe3, 0x73, 0x3f, 0x9d,
	0x33, 0x32, 0x74, 0xa3, 0x95, 0x2b, 0x50, 0x4a, 0x16, 0x06, 0xa3, 0x28, 0xe6, 0x92, 0x93, 0x56,
	0xb6, 0x1d, 0x7c, 0x0e, 0x38, 0x0f, 0xd6, 0xe8, 0xd2, 0x88, 0xb9, 0x34, 0x0c, 0xb9, 0xa4, 0x92,
	0xf1, 0x50, 0xa4, 0x32, 0x7b, 0x0a, 0xad, 0x45, 0x2a, 0x24, 0x5d, 0x68, 0x5c, 0xe3, 0xd6, 0xd4,
	0x2c, 0xcd, 0xf9, 0xe0, 0xed, 0x96, 0x84, 0x40, 0x53, 0x6e, 0x23, 0x34, 0x75, 0x75, 0xa4, 0xd6,
	0xa4, 0x07, 0xef, 0x36, 0x74, 0x9d, 0xa0, 0xd9, 0xb0, 0x34, 0xa7, 0xed, 0xa5, 0x1b, 0x7b, 0x0e,
	0xc6, 0x52, 0x60, 0x9c, 0x5b, 0x75, 0x40, 0x67, 0x7e, 0xe6, 0xa4, 0x33, 0x9f, 0xfc, 0x80, 0x76,
	0x86, 0x23, 0x4c, 0xdd, 0x6a, 0x38, 0xc6, 0xa4, 0x3b, 0xca, 0x71, 0xb3, 0x6f, 0xbc, 0x42, 0x61,
	0x4f, 0xa1, 0xbf, 0x8c, 0x7c, 0x2a, 0xb1, 0x64, 0xe9, 0xa1, 0x88, 0x78, 0x28, 0x90, 0x38, 0xd0,
	0xf4, 0xa9, 0xa4, 0xca, 0xdc, 0x98, 0xf4, 0x0a, 0x9b, 0xb2, 0x56, 0x29, 0x76, 0x4c, 0x7f, 0xb9,
	0x90, 0x67, 0x66, 0x2a, 0x59, 0xbe, 0xc9, 0x54, 0xd6, 0xa6, 0x4c, 0xff, 0xa1, 0xf7, 0x3b, 0x46,
	0x2a, 0xb1, 0xb0, 0xb8, 0x49, 0x50, 0xc8, 0x13, 0xe1, 0x66, 0x15, 0xd7, 0x1d, 0x18, 0x92, 0xf1,
	0x01, 0xd7, 0x97, 0xc2, 0xa1, 0x0e, 0x21, 0x05, 0x9c, 0x3c, 0x34, 0xa1, 0x93, 0x5d, 0x2c, 0x30,
	0xde, 0xb0, 0x0b, 0x24, 0x09, 0x7c, 0xaa, 0xd4, 0x41, 0x6a, 0x83, 0x1f, 0xd8, 0xfb, 0xd3, 0x63,
	0x05, 0xda, 0xdf, 0xee, 0x9f, 0x9e, 0x1f, 0x75, 0xcb, 0x1e, 0xaa, 0x17, 0xb9, 0x19, 0xbb, 0x89,
	0xc0, 0x58, 0xb8, 0xb7, 0xcc, 0xbf, 0xcb, 0x9f, 0xb0, 0xf8, 0xa5, 0x7d, 0xdf, 0x8f, 0x2d, 0x97,
	0x58, 0x9b, 0x6d, 0x65, 0x6c, 0x4d, 0x47, 0xd5, 0xb1, 0x97, 0x5c, 0xc8, 0x9a, 0xb1, 0xff, 0xe0,
	0xe3, 0x41, 0x3c, 0xe4, 0xf5, 0xd8, 0x06, 0x47, 0xaf, 0xd3, 0x0a, 0xe6, 0x60, 0xcc, 0x42, 0x26,
	0xcf, 0x63, 0x76, 0x05, 0xc6, 0x1f, 0xcc, 0xbd, 0xc4, 0x09, 0x1d, 0x7c, 0x55, 0x61, 0x0c, 0x49,
	0x3f, 0x0f, 0x23, 0x40, 0x59, 0xa4, 0xa0, 0x32, 0x59, 0xbd, 0x57, 0xff, 0x87, 0x9f, 0x2f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xfe, 0xf2, 0x47, 0x14, 0x5a, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SettingServiceClient is the client API for SettingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SettingServiceClient interface {
	UpdateUserSetting(ctx context.Context, in *UserSetting, opts ...grpc.CallOption) (*UpdateUserSettingResponse, error)
	UpdateHostSetting(ctx context.Context, in *HostSetting, opts ...grpc.CallOption) (*UpdateHostSettingResponse, error)
	// this endpoint only use for create new setting by sign up guest as host
	CreateSetting(ctx context.Context, in *CreateSettingRequest, opts ...grpc.CallOption) (*CreateSettingRespone, error)
	// this endpoint only use for create initial setting for users
	InitSetting(ctx context.Context, in *CreateSettingRequest, opts ...grpc.CallOption) (*CreateSettingRespone, error)
	GetSettings(ctx context.Context, in *UserSetting, opts ...grpc.CallOption) (*UpdateUserSettingResponse, error)
}

type settingServiceClient struct {
	cc *grpc.ClientConn
}

func NewSettingServiceClient(cc *grpc.ClientConn) SettingServiceClient {
	return &settingServiceClient{cc}
}

func (c *settingServiceClient) UpdateUserSetting(ctx context.Context, in *UserSetting, opts ...grpc.CallOption) (*UpdateUserSettingResponse, error) {
	out := new(UpdateUserSettingResponse)
	err := c.cc.Invoke(ctx, "/setting.SettingService/UpdateUserSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingServiceClient) UpdateHostSetting(ctx context.Context, in *HostSetting, opts ...grpc.CallOption) (*UpdateHostSettingResponse, error) {
	out := new(UpdateHostSettingResponse)
	err := c.cc.Invoke(ctx, "/setting.SettingService/UpdateHostSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingServiceClient) CreateSetting(ctx context.Context, in *CreateSettingRequest, opts ...grpc.CallOption) (*CreateSettingRespone, error) {
	out := new(CreateSettingRespone)
	err := c.cc.Invoke(ctx, "/setting.SettingService/CreateSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingServiceClient) InitSetting(ctx context.Context, in *CreateSettingRequest, opts ...grpc.CallOption) (*CreateSettingRespone, error) {
	out := new(CreateSettingRespone)
	err := c.cc.Invoke(ctx, "/setting.SettingService/InitSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *settingServiceClient) GetSettings(ctx context.Context, in *UserSetting, opts ...grpc.CallOption) (*UpdateUserSettingResponse, error) {
	out := new(UpdateUserSettingResponse)
	err := c.cc.Invoke(ctx, "/setting.SettingService/GetSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettingServiceServer is the server API for SettingService service.
type SettingServiceServer interface {
	UpdateUserSetting(context.Context, *UserSetting) (*UpdateUserSettingResponse, error)
	UpdateHostSetting(context.Context, *HostSetting) (*UpdateHostSettingResponse, error)
	// this endpoint only use for create new setting by sign up guest as host
	CreateSetting(context.Context, *CreateSettingRequest) (*CreateSettingRespone, error)
	// this endpoint only use for create initial setting for users
	InitSetting(context.Context, *CreateSettingRequest) (*CreateSettingRespone, error)
	GetSettings(context.Context, *UserSetting) (*UpdateUserSettingResponse, error)
}

// UnimplementedSettingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSettingServiceServer struct {
}

func (*UnimplementedSettingServiceServer) UpdateUserSetting(ctx context.Context, req *UserSetting) (*UpdateUserSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserSetting not implemented")
}
func (*UnimplementedSettingServiceServer) UpdateHostSetting(ctx context.Context, req *HostSetting) (*UpdateHostSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHostSetting not implemented")
}
func (*UnimplementedSettingServiceServer) CreateSetting(ctx context.Context, req *CreateSettingRequest) (*CreateSettingRespone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSetting not implemented")
}
func (*UnimplementedSettingServiceServer) InitSetting(ctx context.Context, req *CreateSettingRequest) (*CreateSettingRespone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitSetting not implemented")
}
func (*UnimplementedSettingServiceServer) GetSettings(ctx context.Context, req *UserSetting) (*UpdateUserSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSettings not implemented")
}

func RegisterSettingServiceServer(s *grpc.Server, srv SettingServiceServer) {
	s.RegisterService(&_SettingService_serviceDesc, srv)
}

func _SettingService_UpdateUserSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingServiceServer).UpdateUserSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/setting.SettingService/UpdateUserSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingServiceServer).UpdateUserSetting(ctx, req.(*UserSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingService_UpdateHostSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingServiceServer).UpdateHostSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/setting.SettingService/UpdateHostSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingServiceServer).UpdateHostSetting(ctx, req.(*HostSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingService_CreateSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingServiceServer).CreateSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/setting.SettingService/CreateSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingServiceServer).CreateSetting(ctx, req.(*CreateSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingService_InitSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingServiceServer).InitSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/setting.SettingService/InitSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingServiceServer).InitSetting(ctx, req.(*CreateSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SettingService_GetSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingServiceServer).GetSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/setting.SettingService/GetSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingServiceServer).GetSettings(ctx, req.(*UserSetting))
	}
	return interceptor(ctx, in, info, handler)
}

var _SettingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "setting.SettingService",
	HandlerType: (*SettingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateUserSetting",
			Handler:    _SettingService_UpdateUserSetting_Handler,
		},
		{
			MethodName: "UpdateHostSetting",
			Handler:    _SettingService_UpdateHostSetting_Handler,
		},
		{
			MethodName: "CreateSetting",
			Handler:    _SettingService_CreateSetting_Handler,
		},
		{
			MethodName: "InitSetting",
			Handler:    _SettingService_InitSetting_Handler,
		},
		{
			MethodName: "GetSettings",
			Handler:    _SettingService_GetSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/setting.proto",
}
